/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   C:/Users/APuthenp/zephyrproject/apps/ReadID_ad74416h_Rev1/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   C:/Users/APuthenp/zephyrproject/modules/ad74416h/dts/bindings, $ZEPHYR_BASE\dts\bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /soc
 *   4   /clocks
 *   5   /clocks/clk_ipo
 *   6   /soc/clock-controller@40000000
 *   7   /soc/interrupt-controller@e000e100
 *   8   /soc/pin-controller@40008000
 *   9   /soc/pin-controller@40008000/gpio@40008000
 *   10  /buttons
 *   11  /buttons/pb1
 *   12  /clocks/clk_erfo
 *   13  /clocks/clk_ertco
 *   14  /clocks/clk_ibro
 *   15  /clocks/clk_inro
 *   16  /clocks/clk_iso
 *   17  /cpus
 *   18  /cpus/cpu@0
 *   19  /leds
 *   20  /leds/led_1
 *   21  /leds/led_2
 *   22  /soc/dma@40028000
 *   23  /soc/pin-controller@40008000/i2c0_scl_p0_6
 *   24  /soc/pin-controller@40008000/i2c0_sda_p0_7
 *   25  /soc/i2c0@4001d000
 *   26  /soc/i2c1@4001e000
 *   27  /soc/i2c2@4001f000
 *   28  /soc/memory@20000000
 *   29  /soc/memory@20004000
 *   30  /soc/memory@20008000
 *   31  /soc/memory@20010000
 *   32  /soc/memory@20020000
 *   33  /soc/memory@20021000
 *   34  /soc/memory@20022000
 *   35  /soc/memory@20024000
 *   36  /soc/pin-controller@40008000/uart0a_rx_p0_8
 *   37  /soc/pin-controller@40008000/uart0a_tx_p0_9
 *   38  /soc/serial@40042000
 *   39  /soc/serial@40043000
 *   40  /soc/serial@40044000
 *   41  /soc/serial@40145000
 *   42  /soc/pin-controller@40008000/spi0_miso_p0_2
 *   43  /soc/pin-controller@40008000/spi0_mosi_p0_3
 *   44  /soc/pin-controller@40008000/spi0_sck_p0_4
 *   45  /soc/pin-controller@40008000/spi0_ss0_p0_5
 *   46  /soc/spi@40046000
 *   47  /soc/spi@40048000
 *   48  /soc/timer@e000e010
 *   49  /soc/trng@4004d000
 *   50  /soc/watchdog@40003000
 *   51  /soc/watchdog@40003400
 *   52  /soc/flash_controller@40029000
 *   53  /soc/flash_controller@40029000/flash@10000000
 *   54  /soc/pin-controller@40008000/gpio@40009000
 *   55  /soc/pin-controller@40008000/spi1_miso_p0_14
 *   56  /soc/pin-controller@40008000/spi1_mosi_p0_15
 *   57  /soc/pin-controller@40008000/spi1_sck_p0_16
 *   58  /soc/pin-controller@40008000/spi1_ss0_p0_17
 *   59  /soc/spi@40047000
 *   60  /soc/spi@40047000/ad74416h@0
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"

/* Helpers for dealing with node labels: */
#define DT_N_NODELABEL_NUM 0
#define DT_N_FOREACH_NODELABEL(fn) 
#define DT_N_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_CHILD_NUM 7
#define DT_N_CHILD_NUM_STATUS_OKAY 7
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_clocks) fn(DT_N_S_leds) fn(DT_N_S_buttons)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_clocks) fn(DT_N_S_leds) fn(DT_N_S_buttons)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /soc */ \
	4, /* /clocks */ \
	10, /* /buttons */ \
	17, /* /cpus */ \
	19, /* /leds */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_adi_max32670evkit DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_IRQ_LEVEL 0
#define DT_N_COMPAT_MATCHES_adi_max32670evkit 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "Analog Devices, Inc."
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "max32670evkit"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"adi,max32670evkit"}
#define DT_N_P_compatible_IDX_0 "adi,max32670evkit"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED adi,max32670evkit
#define DT_N_P_compatible_IDX_0_STRING_TOKEN adi_max32670evkit
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN ADI_MAX32670EVKIT
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_aliases_NODELABEL_NUM 0
#define DT_N_S_aliases_FOREACH_NODELABEL(fn) 
#define DT_N_S_aliases_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_CHILD_NUM 0
#define DT_N_S_aliases_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_IRQ_LEVEL 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_chosen_NODELABEL_NUM 0
#define DT_N_S_chosen_FOREACH_NODELABEL(fn) 
#define DT_N_S_chosen_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_CHILD_NUM 0
#define DT_N_S_chosen_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2
#define DT_N_S_chosen_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_IRQ_LEVEL 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_NODELABEL_NUM 0
#define DT_N_S_soc_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_CHILD_NUM 27
#define DT_N_S_soc_CHILD_NUM_STATUS_OKAY 20
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_flash_controller_40029000) fn(DT_N_S_soc_S_clock_controller_40000000) fn(DT_N_S_soc_S_i2c0_4001d000) fn(DT_N_S_soc_S_i2c1_4001e000) fn(DT_N_S_soc_S_i2c2_4001f000) fn(DT_N_S_soc_S_pin_controller_40008000) fn(DT_N_S_soc_S_serial_40042000) fn(DT_N_S_soc_S_serial_40043000) fn(DT_N_S_soc_S_serial_40044000) fn(DT_N_S_soc_S_trng_4004d000) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_memory_20004000) fn(DT_N_S_soc_S_memory_20008000) fn(DT_N_S_soc_S_memory_20010000) fn(DT_N_S_soc_S_memory_20020000) fn(DT_N_S_soc_S_memory_20021000) fn(DT_N_S_soc_S_memory_20022000) fn(DT_N_S_soc_S_memory_20024000) fn(DT_N_S_soc_S_serial_40145000) fn(DT_N_S_soc_S_dma_40028000) fn(DT_N_S_soc_S_watchdog_40003400) fn(DT_N_S_soc_S_spi_40046000) fn(DT_N_S_soc_S_spi_40047000) fn(DT_N_S_soc_S_spi_40048000)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40029000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_controller_40000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c0_4001d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c1_4001e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c2_4001f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40042000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40043000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40044000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_trng_4004d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20010000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20024000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40145000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40028000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40046000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40047000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40048000)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40029000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_controller_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c0_4001d000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c1_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c2_4001f000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40042000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40043000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40044000, __VA_ARGS__) fn(DT_N_S_soc_S_trng_4004d000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20004000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20008000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20010000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20020000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20021000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20022000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20024000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40145000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40028000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003400, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40046000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40047000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40048000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40029000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_controller_40000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c0_4001d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c1_4001e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c2_4001f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40042000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40043000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40044000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_trng_4004d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20010000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20024000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40145000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40028000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40046000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40047000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40048000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_flash_controller_40029000) fn(DT_N_S_soc_S_clock_controller_40000000) fn(DT_N_S_soc_S_i2c0_4001d000) fn(DT_N_S_soc_S_pin_controller_40008000) fn(DT_N_S_soc_S_serial_40042000) fn(DT_N_S_soc_S_trng_4004d000) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_memory_20004000) fn(DT_N_S_soc_S_memory_20008000) fn(DT_N_S_soc_S_memory_20010000) fn(DT_N_S_soc_S_memory_20020000) fn(DT_N_S_soc_S_memory_20021000) fn(DT_N_S_soc_S_memory_20022000) fn(DT_N_S_soc_S_memory_20024000) fn(DT_N_S_soc_S_dma_40028000) fn(DT_N_S_soc_S_spi_40046000) fn(DT_N_S_soc_S_spi_40047000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40029000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_controller_40000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c0_4001d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40042000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_trng_4004d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20010000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20022000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20024000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40028000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40046000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40047000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40029000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_controller_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c0_4001d000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40042000, __VA_ARGS__) fn(DT_N_S_soc_S_trng_4004d000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20004000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20008000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20010000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20020000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20021000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20022000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20024000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40028000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40046000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40047000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_40029000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_controller_40000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c0_4001d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_serial_40042000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_trng_4004d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20010000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20022000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20024000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40028000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40046000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40047000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 3
#define DT_N_S_soc_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	6, /* /soc/clock-controller@40000000 */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/pin-controller@40008000 */ \
	22, /* /soc/dma@40028000 */ \
	25, /* /soc/i2c0@4001d000 */ \
	26, /* /soc/i2c1@4001e000 */ \
	27, /* /soc/i2c2@4001f000 */ \
	28, /* /soc/memory@20000000 */ \
	29, /* /soc/memory@20004000 */ \
	30, /* /soc/memory@20008000 */ \
	31, /* /soc/memory@20010000 */ \
	32, /* /soc/memory@20020000 */ \
	33, /* /soc/memory@20021000 */ \
	34, /* /soc/memory@20022000 */ \
	35, /* /soc/memory@20024000 */ \
	38, /* /soc/serial@40042000 */ \
	39, /* /soc/serial@40043000 */ \
	40, /* /soc/serial@40044000 */ \
	41, /* /soc/serial@40145000 */ \
	46, /* /soc/spi@40046000 */ \
	47, /* /soc/spi@40048000 */ \
	48, /* /soc/timer@e000e010 */ \
	49, /* /soc/trng@4004d000 */ \
	50, /* /soc/watchdog@40003000 */ \
	51, /* /soc/watchdog@40003400 */ \
	52, /* /soc/flash_controller@40029000 */ \
	59, /* /soc/spi@40047000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_IRQ_LEVEL 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /clocks
 *
 * Node identifier: DT_N_S_clocks
 */

/* Node's full path: */
#define DT_N_S_clocks_PATH "/clocks"

/* Node's name with unit-address: */
#define DT_N_S_clocks_FULL_NAME "clocks"

/* Node parent (/) identifier: */
#define DT_N_S_clocks_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_NODELABEL_NUM 0
#define DT_N_S_clocks_FOREACH_NODELABEL(fn) 
#define DT_N_S_clocks_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_CHILD_NUM 6
#define DT_N_S_clocks_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_clocks_FOREACH_CHILD(fn) fn(DT_N_S_clocks_S_clk_ipo) fn(DT_N_S_clocks_S_clk_iso) fn(DT_N_S_clocks_S_clk_inro) fn(DT_N_S_clocks_S_clk_ibro) fn(DT_N_S_clocks_S_clk_ertco) fn(DT_N_S_clocks_S_clk_erfo)
#define DT_N_S_clocks_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_ipo) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_iso) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_inro) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_ibro) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_ertco) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_erfo)
#define DT_N_S_clocks_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_ipo, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_iso, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_inro, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_ibro, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_ertco, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_erfo, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_ipo, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_iso, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_inro, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_ibro, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_ertco, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_erfo, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_clocks_S_clk_ipo)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_ipo)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_ipo, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_ipo, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_clocks_ORD 4
#define DT_N_S_clocks_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_SUPPORTS_ORDS \
	5, /* /clocks/clk_ipo */ \
	12, /* /clocks/clk_erfo */ \
	13, /* /clocks/clk_ertco */ \
	14, /* /clocks/clk_ibro */ \
	15, /* /clocks/clk_inro */ \
	16, /* /clocks/clk_iso */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_REG_NUM 0
#define DT_N_S_clocks_RANGES_NUM 0
#define DT_N_S_clocks_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_IRQ_NUM 0
#define DT_N_S_clocks_IRQ_LEVEL 0
#define DT_N_S_clocks_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /clocks/clk_ipo
 *
 * Node identifier: DT_N_S_clocks_S_clk_ipo
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_ipo_PATH "/clocks/clk_ipo"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_ipo_FULL_NAME "clk_ipo"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_ipo_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_ipo_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_ipo_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_ipo_FOREACH_NODELABEL(fn) fn(clk_ipo)
#define DT_N_S_clocks_S_clk_ipo_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_ipo, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_ipo_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_ipo_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_ipo_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_ipo_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_ipo_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_ipo_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_ipo_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_ipo_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_ipo_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_ipo_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_ipo_ORD 5
#define DT_N_S_clocks_S_clk_ipo_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_ipo_REQUIRES_ORDS \
	4, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_ipo_SUPPORTS_ORDS \
	6, /* /soc/clock-controller@40000000 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_ipo_EXISTS 1
#define DT_N_INST_0_fixed_clock DT_N_S_clocks_S_clk_ipo
#define DT_N_NODELABEL_clk_ipo  DT_N_S_clocks_S_clk_ipo

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_ipo_REG_NUM 0
#define DT_N_S_clocks_S_clk_ipo_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_ipo_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_ipo_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_ipo_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_ipo_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_ipo_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_ipo_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_ipo_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_ipo_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_ipo_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_ipo_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_clocks_S_clk_ipo_P_status "okay"
#define DT_N_S_clocks_S_clk_ipo_P_status_STRING_UNQUOTED okay
#define DT_N_S_clocks_S_clk_ipo_P_status_STRING_TOKEN okay
#define DT_N_S_clocks_S_clk_ipo_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_clk_ipo_P_status_IDX_0 "okay"
#define DT_N_S_clocks_S_clk_ipo_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_ipo_P_status_ENUM_IDX 1
#define DT_N_S_clocks_S_clk_ipo_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_clocks_S_clk_ipo_P_status_ENUM_TOKEN okay
#define DT_N_S_clocks_S_clk_ipo_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_clk_ipo_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_ipo, status, 0)
#define DT_N_S_clocks_S_clk_ipo_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_ipo, status, 0)
#define DT_N_S_clocks_S_clk_ipo_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_ipo, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_ipo_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_ipo, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_ipo_P_status_LEN 1
#define DT_N_S_clocks_S_clk_ipo_P_status_EXISTS 1
#define DT_N_S_clocks_S_clk_ipo_P_compatible {"fixed-clock"}
#define DT_N_S_clocks_S_clk_ipo_P_compatible_IDX_0 "fixed-clock"
#define DT_N_S_clocks_S_clk_ipo_P_compatible_IDX_0_STRING_UNQUOTED fixed-clock
#define DT_N_S_clocks_S_clk_ipo_P_compatible_IDX_0_STRING_TOKEN fixed_clock
#define DT_N_S_clocks_S_clk_ipo_P_compatible_IDX_0_STRING_UPPER_TOKEN FIXED_CLOCK
#define DT_N_S_clocks_S_clk_ipo_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_ipo_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_ipo, compatible, 0)
#define DT_N_S_clocks_S_clk_ipo_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_ipo, compatible, 0)
#define DT_N_S_clocks_S_clk_ipo_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_ipo, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_ipo_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_ipo, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_ipo_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_ipo_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_ipo_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_ipo_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_ipo_P_clock_frequency 100000000
#define DT_N_S_clocks_S_clk_ipo_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /soc/clock-controller@40000000
 *
 * Node identifier: DT_N_S_soc_S_clock_controller_40000000
 *
 * Binding (compatible = adi,max32-gcr):
 *   $ZEPHYR_BASE\dts\bindings\clock\adi,max32-gcr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_clock_controller_40000000_PATH "/soc/clock-controller@40000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_clock_controller_40000000_FULL_NAME "clock-controller@40000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_clock_controller_40000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_clock_controller_40000000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_clock_controller_40000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_clock_controller_40000000_FOREACH_NODELABEL(fn) fn(gcr)
#define DT_N_S_soc_S_clock_controller_40000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gcr, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_clock_controller_40000000_CHILD_NUM 0
#define DT_N_S_soc_S_clock_controller_40000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_clock_controller_40000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_clock_controller_40000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_clock_controller_40000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_clock_controller_40000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_clock_controller_40000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_clock_controller_40000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_clock_controller_40000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_clock_controller_40000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_clock_controller_40000000_ORD 6
#define DT_N_S_soc_S_clock_controller_40000000_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_clock_controller_40000000_REQUIRES_ORDS \
	3, /* /soc */ \
	5, /* /clocks/clk_ipo */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_clock_controller_40000000_SUPPORTS_ORDS \
	9, /* /soc/pin-controller@40008000/gpio@40008000 */ \
	22, /* /soc/dma@40028000 */ \
	25, /* /soc/i2c0@4001d000 */ \
	26, /* /soc/i2c1@4001e000 */ \
	27, /* /soc/i2c2@4001f000 */ \
	38, /* /soc/serial@40042000 */ \
	39, /* /soc/serial@40043000 */ \
	40, /* /soc/serial@40044000 */ \
	41, /* /soc/serial@40145000 */ \
	46, /* /soc/spi@40046000 */ \
	47, /* /soc/spi@40048000 */ \
	49, /* /soc/trng@4004d000 */ \
	50, /* /soc/watchdog@40003000 */ \
	51, /* /soc/watchdog@40003400 */ \
	54, /* /soc/pin-controller@40008000/gpio@40009000 */ \
	59, /* /soc/spi@40047000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_clock_controller_40000000_EXISTS 1
#define DT_N_INST_0_adi_max32_gcr DT_N_S_soc_S_clock_controller_40000000
#define DT_N_NODELABEL_gcr        DT_N_S_soc_S_clock_controller_40000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_clock_controller_40000000_REG_NUM 1
#define DT_N_S_soc_S_clock_controller_40000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40000000_REG_IDX_0_VAL_ADDRESS 1073741824 /* 0x40000000 */
#define DT_N_S_soc_S_clock_controller_40000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_clock_controller_40000000_RANGES_NUM 0
#define DT_N_S_soc_S_clock_controller_40000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_clock_controller_40000000_IRQ_NUM 0
#define DT_N_S_soc_S_clock_controller_40000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_clock_controller_40000000_COMPAT_MATCHES_adi_max32_gcr 1
#define DT_N_S_soc_S_clock_controller_40000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40000000_COMPAT_VENDOR_IDX_0 "Analog Devices, Inc."
#define DT_N_S_soc_S_clock_controller_40000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40000000_COMPAT_MODEL_IDX_0 "max32-gcr"
#define DT_N_S_soc_S_clock_controller_40000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_clock_controller_40000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_clock_controller_40000000_P_wakeup_source 0
#define DT_N_S_soc_S_clock_controller_40000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_clock_controller_40000000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40000000_P_status "okay"
#define DT_N_S_soc_S_clock_controller_40000000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_clock_controller_40000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_clock_controller_40000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_clock_controller_40000000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_clock_controller_40000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_clock_controller_40000000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_clock_controller_40000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_clock_controller_40000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_controller_40000000, status, 0)
#define DT_N_S_soc_S_clock_controller_40000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_clock_controller_40000000, status, 0)
#define DT_N_S_soc_S_clock_controller_40000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_controller_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_controller_40000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_clock_controller_40000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_controller_40000000_P_status_LEN 1
#define DT_N_S_soc_S_clock_controller_40000000_P_status_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40000000_P_compatible {"adi,max32-gcr"}
#define DT_N_S_soc_S_clock_controller_40000000_P_compatible_IDX_0 "adi,max32-gcr"
#define DT_N_S_soc_S_clock_controller_40000000_P_compatible_IDX_0_STRING_UNQUOTED adi,max32-gcr
#define DT_N_S_soc_S_clock_controller_40000000_P_compatible_IDX_0_STRING_TOKEN adi_max32_gcr
#define DT_N_S_soc_S_clock_controller_40000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ADI_MAX32_GCR
#define DT_N_S_soc_S_clock_controller_40000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_controller_40000000, compatible, 0)
#define DT_N_S_soc_S_clock_controller_40000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_clock_controller_40000000, compatible, 0)
#define DT_N_S_soc_S_clock_controller_40000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_controller_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_controller_40000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_clock_controller_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_controller_40000000_P_compatible_LEN 1
#define DT_N_S_soc_S_clock_controller_40000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40000000_P_reg {1073741824 /* 0x40000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_clock_controller_40000000_P_reg_IDX_0 1073741824
#define DT_N_S_soc_S_clock_controller_40000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_clock_controller_40000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40000000_P_clocks_IDX_0_PH DT_N_S_clocks_S_clk_ipo
#define DT_N_S_soc_S_clock_controller_40000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_controller_40000000, clocks, 0)
#define DT_N_S_soc_S_clock_controller_40000000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_clock_controller_40000000, clocks, 0)
#define DT_N_S_soc_S_clock_controller_40000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_controller_40000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_controller_40000000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_clock_controller_40000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_controller_40000000_P_clocks_LEN 1
#define DT_N_S_soc_S_clock_controller_40000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_clock_controller_40000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40000000_P_sysclk_prescaler 1
#define DT_N_S_soc_S_clock_controller_40000000_P_sysclk_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_clock_controller_40000000_P_sysclk_prescaler_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_clock_controller_40000000_P_sysclk_prescaler_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   $ZEPHYR_BASE\dts\bindings\interrupt-controller\arm,v7m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_NODELABEL_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL(fn) fn(nvic)
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL_VARGS(fn, ...) fn(nvic, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 7
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	9, /* /soc/pin-controller@40008000/gpio@40008000 */ \
	22, /* /soc/dma@40028000 */ \
	25, /* /soc/i2c0@4001d000 */ \
	26, /* /soc/i2c1@4001e000 */ \
	27, /* /soc/i2c2@4001f000 */ \
	38, /* /soc/serial@40042000 */ \
	39, /* /soc/serial@40043000 */ \
	40, /* /soc/serial@40044000 */ \
	41, /* /soc/serial@40145000 */ \
	46, /* /soc/spi@40046000 */ \
	47, /* /soc/spi@40048000 */ \
	50, /* /soc/watchdog@40003000 */ \
	51, /* /soc/watchdog@40003400 */ \
	54, /* /soc/pin-controller@40008000/gpio@40009000 */ \
	59, /* /soc/spi@40047000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v7m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_LEVEL 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v7m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v7m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UNQUOTED arm,v7m-nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v7m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V7M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 3
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40008000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40008000
 *
 * Binding (compatible = adi,max32-pinctrl):
 *   $ZEPHYR_BASE\dts\bindings\pinctrl\adi,max32-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40008000_PATH "/soc/pin-controller@40008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40008000_FULL_NAME "pin-controller@40008000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pin_controller_40008000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40008000_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40008000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40008000_FOREACH_NODELABEL(fn) fn(pinctrl)
#define DT_N_S_soc_S_pin_controller_40008000_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinctrl, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40008000_CHILD_NUM 14
#define DT_N_S_soc_S_pin_controller_40008000_CHILD_NUM_STATUS_OKAY 14
#define DT_N_S_soc_S_pin_controller_40008000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5) fn(DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6) fn(DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7) fn(DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8) fn(DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17)
#define DT_N_S_soc_S_pin_controller_40008000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17)
#define DT_N_S_soc_S_pin_controller_40008000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40008000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40008000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5) fn(DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6) fn(DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7) fn(DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8) fn(DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17)
#define DT_N_S_soc_S_pin_controller_40008000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17)
#define DT_N_S_soc_S_pin_controller_40008000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40008000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40008000_ORD 8
#define DT_N_S_soc_S_pin_controller_40008000_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40008000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40008000_SUPPORTS_ORDS \
	9, /* /soc/pin-controller@40008000/gpio@40008000 */ \
	23, /* /soc/pin-controller@40008000/i2c0_scl_p0_6 */ \
	24, /* /soc/pin-controller@40008000/i2c0_sda_p0_7 */ \
	36, /* /soc/pin-controller@40008000/uart0a_rx_p0_8 */ \
	37, /* /soc/pin-controller@40008000/uart0a_tx_p0_9 */ \
	42, /* /soc/pin-controller@40008000/spi0_miso_p0_2 */ \
	43, /* /soc/pin-controller@40008000/spi0_mosi_p0_3 */ \
	44, /* /soc/pin-controller@40008000/spi0_sck_p0_4 */ \
	45, /* /soc/pin-controller@40008000/spi0_ss0_p0_5 */ \
	54, /* /soc/pin-controller@40008000/gpio@40009000 */ \
	55, /* /soc/pin-controller@40008000/spi1_miso_p0_14 */ \
	56, /* /soc/pin-controller@40008000/spi1_mosi_p0_15 */ \
	57, /* /soc/pin-controller@40008000/spi1_sck_p0_16 */ \
	58, /* /soc/pin-controller@40008000/spi1_ss0_p0_17 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40008000_EXISTS 1
#define DT_N_INST_0_adi_max32_pinctrl DT_N_S_soc_S_pin_controller_40008000
#define DT_N_NODELABEL_pinctrl        DT_N_S_soc_S_pin_controller_40008000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40008000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_REG_IDX_0_VAL_ADDRESS 1073774592 /* 0x40008000 */
#define DT_N_S_soc_S_pin_controller_40008000_REG_IDX_0_VAL_SIZE 8192 /* 0x2000 */
#define DT_N_S_soc_S_pin_controller_40008000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40008000_COMPAT_MATCHES_adi_max32_pinctrl 1
#define DT_N_S_soc_S_pin_controller_40008000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_COMPAT_VENDOR_IDX_0 "Analog Devices, Inc."
#define DT_N_S_soc_S_pin_controller_40008000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_COMPAT_MODEL_IDX_0 "max32-pinctrl"
#define DT_N_S_soc_S_pin_controller_40008000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40008000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40008000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40008000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40008000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_P_compatible {"adi,max32-pinctrl"}
#define DT_N_S_soc_S_pin_controller_40008000_P_compatible_IDX_0 "adi,max32-pinctrl"
#define DT_N_S_soc_S_pin_controller_40008000_P_compatible_IDX_0_STRING_UNQUOTED adi,max32-pinctrl
#define DT_N_S_soc_S_pin_controller_40008000_P_compatible_IDX_0_STRING_TOKEN adi_max32_pinctrl
#define DT_N_S_soc_S_pin_controller_40008000_P_compatible_IDX_0_STRING_UPPER_TOKEN ADI_MAX32_PINCTRL
#define DT_N_S_soc_S_pin_controller_40008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40008000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40008000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40008000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40008000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40008000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40008000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40008000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_P_reg {1073774592 /* 0x40008000 */, 8192 /* 0x2000 */}
#define DT_N_S_soc_S_pin_controller_40008000_P_reg_IDX_0 1073774592
#define DT_N_S_soc_S_pin_controller_40008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_P_reg_IDX_1 8192
#define DT_N_S_soc_S_pin_controller_40008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_40008000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40008000/gpio@40008000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000
 *
 * Binding (compatible = adi,max32-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\adi,max32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_PATH "/soc/pin-controller@40008000/gpio@40008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_FULL_NAME "gpio@40008000"

/* Node parent (/soc/pin-controller@40008000) identifier: */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_PARENT DT_N_S_soc_S_pin_controller_40008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_FOREACH_NODELABEL(fn) fn(gpio0)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_ORD 9
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_REQUIRES_ORDS \
	6, /* /soc/clock-controller@40000000 */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/pin-controller@40008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_SUPPORTS_ORDS \
	10, /* /buttons */ \
	11, /* /buttons/pb1 */ \
	19, /* /leds */ \
	20, /* /leds/led_1 */ \
	21, /* /leds/led_2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_EXISTS 1
#define DT_N_INST_0_adi_max32_gpio DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000
#define DT_N_NODELABEL_gpio0       DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_REG_IDX_0_VAL_ADDRESS 1073774592 /* 0x40008000 */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_IRQ_NUM 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_IRQ_LEVEL 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_COMPAT_MATCHES_adi_max32_gpio 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_COMPAT_VENDOR_IDX_0 "Analog Devices, Inc."
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_COMPAT_MODEL_IDX_0 "max32-gpio"
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_status "okay"
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000, status, 0)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000, status, 0)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_status_LEN 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_status_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_compatible {"adi,max32-gpio"}
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_compatible_IDX_0 "adi,max32-gpio"
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_compatible_IDX_0_STRING_UNQUOTED adi,max32-gpio
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_compatible_IDX_0_STRING_TOKEN adi_max32_gpio
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_compatible_IDX_0_STRING_UPPER_TOKEN ADI_MAX32_GPIO
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_reg {1073774592 /* 0x40008000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_reg_IDX_0 1073774592
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40000000
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_clocks_IDX_0_VAL_bit 0
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_clocks_IDX_0_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /buttons
 *
 * Node identifier: DT_N_S_buttons
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE\dts\bindings\input\gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_buttons_PATH "/buttons"

/* Node's name with unit-address: */
#define DT_N_S_buttons_FULL_NAME "buttons"

/* Node parent (/) identifier: */
#define DT_N_S_buttons_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_buttons_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_buttons_NODELABEL_NUM 0
#define DT_N_S_buttons_FOREACH_NODELABEL(fn) 
#define DT_N_S_buttons_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_buttons_CHILD_NUM 1
#define DT_N_S_buttons_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_buttons_FOREACH_CHILD(fn) fn(DT_N_S_buttons_S_pb1)
#define DT_N_S_buttons_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_buttons_S_pb1)
#define DT_N_S_buttons_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_buttons_S_pb1, __VA_ARGS__)
#define DT_N_S_buttons_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_pb1, __VA_ARGS__)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_buttons_S_pb1)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_buttons_S_pb1)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_buttons_S_pb1, __VA_ARGS__)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_pb1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_buttons_ORD 10
#define DT_N_S_buttons_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_buttons_REQUIRES_ORDS \
	0, /* / */ \
	9, /* /soc/pin-controller@40008000/gpio@40008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_buttons_SUPPORTS_ORDS \
	11, /* /buttons/pb1 */

/* Existence and alternate IDs: */
#define DT_N_S_buttons_EXISTS 1
#define DT_N_INST_0_gpio_keys DT_N_S_buttons

/* Macros for properties that are special in the specification: */
#define DT_N_S_buttons_REG_NUM 0
#define DT_N_S_buttons_RANGES_NUM 0
#define DT_N_S_buttons_FOREACH_RANGE(fn) 
#define DT_N_S_buttons_IRQ_NUM 0
#define DT_N_S_buttons_IRQ_LEVEL 0
#define DT_N_S_buttons_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_buttons_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_buttons_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_buttons_P_wakeup_source 0
#define DT_N_S_buttons_P_wakeup_source_EXISTS 1
#define DT_N_S_buttons_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_buttons_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_buttons_P_compatible {"gpio-keys"}
#define DT_N_S_buttons_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_buttons_P_compatible_IDX_0_STRING_UNQUOTED gpio-keys
#define DT_N_S_buttons_P_compatible_IDX_0_STRING_TOKEN gpio_keys
#define DT_N_S_buttons_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_KEYS
#define DT_N_S_buttons_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons, compatible, 0)
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons, compatible, 0)
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons, compatible, 0, __VA_ARGS__)
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons, compatible, 0, __VA_ARGS__)
#define DT_N_S_buttons_P_compatible_LEN 1
#define DT_N_S_buttons_P_compatible_EXISTS 1
#define DT_N_S_buttons_P_zephyr_deferred_init 0
#define DT_N_S_buttons_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_buttons_P_debounce_interval_ms 30
#define DT_N_S_buttons_P_debounce_interval_ms_EXISTS 1
#define DT_N_S_buttons_P_polling_mode 0
#define DT_N_S_buttons_P_polling_mode_EXISTS 1

/*
 * Devicetree node: /buttons/pb1
 *
 * Node identifier: DT_N_S_buttons_S_pb1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_buttons_S_pb1_PATH "/buttons/pb1"

/* Node's name with unit-address: */
#define DT_N_S_buttons_S_pb1_FULL_NAME "pb1"

/* Node parent (/buttons) identifier: */
#define DT_N_S_buttons_S_pb1_PARENT DT_N_S_buttons

/* Node's index in its parent's list of children: */
#define DT_N_S_buttons_S_pb1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_buttons_S_pb1_NODELABEL_NUM 1
#define DT_N_S_buttons_S_pb1_FOREACH_NODELABEL(fn) fn(pb1)
#define DT_N_S_buttons_S_pb1_FOREACH_NODELABEL_VARGS(fn, ...) fn(pb1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_buttons_S_pb1_CHILD_NUM 0
#define DT_N_S_buttons_S_pb1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_buttons_S_pb1_FOREACH_CHILD(fn) 
#define DT_N_S_buttons_S_pb1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_buttons_S_pb1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_buttons_S_pb1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_buttons_S_pb1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_buttons_S_pb1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_buttons_S_pb1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_buttons_S_pb1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_buttons_S_pb1_ORD 11
#define DT_N_S_buttons_S_pb1_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_buttons_S_pb1_REQUIRES_ORDS \
	9, /* /soc/pin-controller@40008000/gpio@40008000 */ \
	10, /* /buttons */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_buttons_S_pb1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_buttons_S_pb1_EXISTS 1
#define DT_N_ALIAS_sw0     DT_N_S_buttons_S_pb1
#define DT_N_NODELABEL_pb1 DT_N_S_buttons_S_pb1

/* Macros for properties that are special in the specification: */
#define DT_N_S_buttons_S_pb1_REG_NUM 0
#define DT_N_S_buttons_S_pb1_RANGES_NUM 0
#define DT_N_S_buttons_S_pb1_FOREACH_RANGE(fn) 
#define DT_N_S_buttons_S_pb1_IRQ_NUM 0
#define DT_N_S_buttons_S_pb1_IRQ_LEVEL 0
#define DT_N_S_buttons_S_pb1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_buttons_S_pb1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_buttons_S_pb1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_buttons_S_pb1_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000
#define DT_N_S_buttons_S_pb1_P_gpios_IDX_0_VAL_pin 21
#define DT_N_S_buttons_S_pb1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_buttons_S_pb1_P_gpios_IDX_0_VAL_flags 17
#define DT_N_S_buttons_S_pb1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_buttons_S_pb1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons_S_pb1, gpios, 0)
#define DT_N_S_buttons_S_pb1_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons_S_pb1, gpios, 0)
#define DT_N_S_buttons_S_pb1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons_S_pb1, gpios, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_pb1_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_pb1, gpios, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_pb1_P_gpios_LEN 1
#define DT_N_S_buttons_S_pb1_P_gpios_EXISTS 1
#define DT_N_S_buttons_S_pb1_P_label "SW2"
#define DT_N_S_buttons_S_pb1_P_label_STRING_UNQUOTED SW2
#define DT_N_S_buttons_S_pb1_P_label_STRING_TOKEN SW2
#define DT_N_S_buttons_S_pb1_P_label_STRING_UPPER_TOKEN SW2
#define DT_N_S_buttons_S_pb1_P_label_IDX_0 "SW2"
#define DT_N_S_buttons_S_pb1_P_label_IDX_0_EXISTS 1
#define DT_N_S_buttons_S_pb1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons_S_pb1, label, 0)
#define DT_N_S_buttons_S_pb1_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons_S_pb1, label, 0)
#define DT_N_S_buttons_S_pb1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons_S_pb1, label, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_pb1_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_pb1, label, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_pb1_P_label_LEN 1
#define DT_N_S_buttons_S_pb1_P_label_EXISTS 1
#define DT_N_S_buttons_S_pb1_P_zephyr_code 11
#define DT_N_S_buttons_S_pb1_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /clocks/clk_erfo
 *
 * Node identifier: DT_N_S_clocks_S_clk_erfo
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_erfo_PATH "/clocks/clk_erfo"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_erfo_FULL_NAME "clk_erfo"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_erfo_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_erfo_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_erfo_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_erfo_FOREACH_NODELABEL(fn) fn(clk_erfo)
#define DT_N_S_clocks_S_clk_erfo_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_erfo, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_erfo_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_erfo_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_erfo_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_erfo_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_erfo_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_erfo_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_erfo_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_erfo_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_erfo_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_erfo_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_erfo_ORD 12
#define DT_N_S_clocks_S_clk_erfo_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_erfo_REQUIRES_ORDS \
	4, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_erfo_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_erfo_EXISTS 1
#define DT_N_INST_5_fixed_clock DT_N_S_clocks_S_clk_erfo
#define DT_N_NODELABEL_clk_erfo DT_N_S_clocks_S_clk_erfo

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_erfo_REG_NUM 0
#define DT_N_S_clocks_S_clk_erfo_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_erfo_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_erfo_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_erfo_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_erfo_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_erfo_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_erfo_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_erfo_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_erfo_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_erfo_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_erfo_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_clocks_S_clk_erfo_P_status "disabled"
#define DT_N_S_clocks_S_clk_erfo_P_status_STRING_UNQUOTED disabled
#define DT_N_S_clocks_S_clk_erfo_P_status_STRING_TOKEN disabled
#define DT_N_S_clocks_S_clk_erfo_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_clk_erfo_P_status_IDX_0 "disabled"
#define DT_N_S_clocks_S_clk_erfo_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_erfo_P_status_ENUM_IDX 2
#define DT_N_S_clocks_S_clk_erfo_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_clocks_S_clk_erfo_P_status_ENUM_TOKEN disabled
#define DT_N_S_clocks_S_clk_erfo_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_clk_erfo_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_erfo, status, 0)
#define DT_N_S_clocks_S_clk_erfo_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_erfo, status, 0)
#define DT_N_S_clocks_S_clk_erfo_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_erfo, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_erfo_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_erfo, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_erfo_P_status_LEN 1
#define DT_N_S_clocks_S_clk_erfo_P_status_EXISTS 1
#define DT_N_S_clocks_S_clk_erfo_P_compatible {"fixed-clock"}
#define DT_N_S_clocks_S_clk_erfo_P_compatible_IDX_0 "fixed-clock"
#define DT_N_S_clocks_S_clk_erfo_P_compatible_IDX_0_STRING_UNQUOTED fixed-clock
#define DT_N_S_clocks_S_clk_erfo_P_compatible_IDX_0_STRING_TOKEN fixed_clock
#define DT_N_S_clocks_S_clk_erfo_P_compatible_IDX_0_STRING_UPPER_TOKEN FIXED_CLOCK
#define DT_N_S_clocks_S_clk_erfo_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_erfo_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_erfo, compatible, 0)
#define DT_N_S_clocks_S_clk_erfo_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_erfo, compatible, 0)
#define DT_N_S_clocks_S_clk_erfo_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_erfo, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_erfo_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_erfo, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_erfo_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_erfo_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_erfo_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_erfo_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_erfo_P_clock_frequency 32000000
#define DT_N_S_clocks_S_clk_erfo_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk_ertco
 *
 * Node identifier: DT_N_S_clocks_S_clk_ertco
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_ertco_PATH "/clocks/clk_ertco"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_ertco_FULL_NAME "clk_ertco"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_ertco_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_ertco_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_ertco_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_ertco_FOREACH_NODELABEL(fn) fn(clk_ertco)
#define DT_N_S_clocks_S_clk_ertco_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_ertco, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_ertco_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_ertco_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_ertco_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_ertco_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_ertco_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_ertco_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_ertco_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_ertco_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_ertco_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_ertco_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_ertco_ORD 13
#define DT_N_S_clocks_S_clk_ertco_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_ertco_REQUIRES_ORDS \
	4, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_ertco_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_ertco_EXISTS 1
#define DT_N_INST_4_fixed_clock  DT_N_S_clocks_S_clk_ertco
#define DT_N_NODELABEL_clk_ertco DT_N_S_clocks_S_clk_ertco

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_ertco_REG_NUM 0
#define DT_N_S_clocks_S_clk_ertco_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_ertco_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_ertco_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_ertco_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_ertco_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_ertco_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_ertco_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_ertco_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_ertco_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_ertco_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_ertco_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_clocks_S_clk_ertco_P_status "disabled"
#define DT_N_S_clocks_S_clk_ertco_P_status_STRING_UNQUOTED disabled
#define DT_N_S_clocks_S_clk_ertco_P_status_STRING_TOKEN disabled
#define DT_N_S_clocks_S_clk_ertco_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_clk_ertco_P_status_IDX_0 "disabled"
#define DT_N_S_clocks_S_clk_ertco_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_ertco_P_status_ENUM_IDX 2
#define DT_N_S_clocks_S_clk_ertco_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_clocks_S_clk_ertco_P_status_ENUM_TOKEN disabled
#define DT_N_S_clocks_S_clk_ertco_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_clk_ertco_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_ertco, status, 0)
#define DT_N_S_clocks_S_clk_ertco_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_ertco, status, 0)
#define DT_N_S_clocks_S_clk_ertco_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_ertco, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_ertco_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_ertco, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_ertco_P_status_LEN 1
#define DT_N_S_clocks_S_clk_ertco_P_status_EXISTS 1
#define DT_N_S_clocks_S_clk_ertco_P_compatible {"fixed-clock"}
#define DT_N_S_clocks_S_clk_ertco_P_compatible_IDX_0 "fixed-clock"
#define DT_N_S_clocks_S_clk_ertco_P_compatible_IDX_0_STRING_UNQUOTED fixed-clock
#define DT_N_S_clocks_S_clk_ertco_P_compatible_IDX_0_STRING_TOKEN fixed_clock
#define DT_N_S_clocks_S_clk_ertco_P_compatible_IDX_0_STRING_UPPER_TOKEN FIXED_CLOCK
#define DT_N_S_clocks_S_clk_ertco_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_ertco_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_ertco, compatible, 0)
#define DT_N_S_clocks_S_clk_ertco_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_ertco, compatible, 0)
#define DT_N_S_clocks_S_clk_ertco_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_ertco, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_ertco_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_ertco, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_ertco_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_ertco_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_ertco_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_ertco_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_ertco_P_clock_frequency 32768
#define DT_N_S_clocks_S_clk_ertco_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk_ibro
 *
 * Node identifier: DT_N_S_clocks_S_clk_ibro
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_ibro_PATH "/clocks/clk_ibro"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_ibro_FULL_NAME "clk_ibro"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_ibro_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_ibro_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_ibro_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_ibro_FOREACH_NODELABEL(fn) fn(clk_ibro)
#define DT_N_S_clocks_S_clk_ibro_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_ibro, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_ibro_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_ibro_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_ibro_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_ibro_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_ibro_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_ibro_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_ibro_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_ibro_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_ibro_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_ibro_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_ibro_ORD 14
#define DT_N_S_clocks_S_clk_ibro_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_ibro_REQUIRES_ORDS \
	4, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_ibro_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_ibro_EXISTS 1
#define DT_N_INST_3_fixed_clock DT_N_S_clocks_S_clk_ibro
#define DT_N_NODELABEL_clk_ibro DT_N_S_clocks_S_clk_ibro

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_ibro_REG_NUM 0
#define DT_N_S_clocks_S_clk_ibro_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_ibro_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_ibro_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_ibro_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_ibro_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_ibro_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_ibro_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_ibro_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_ibro_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_ibro_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_ibro_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_clocks_S_clk_ibro_P_status "disabled"
#define DT_N_S_clocks_S_clk_ibro_P_status_STRING_UNQUOTED disabled
#define DT_N_S_clocks_S_clk_ibro_P_status_STRING_TOKEN disabled
#define DT_N_S_clocks_S_clk_ibro_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_clk_ibro_P_status_IDX_0 "disabled"
#define DT_N_S_clocks_S_clk_ibro_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_ibro_P_status_ENUM_IDX 2
#define DT_N_S_clocks_S_clk_ibro_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_clocks_S_clk_ibro_P_status_ENUM_TOKEN disabled
#define DT_N_S_clocks_S_clk_ibro_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_clk_ibro_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_ibro, status, 0)
#define DT_N_S_clocks_S_clk_ibro_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_ibro, status, 0)
#define DT_N_S_clocks_S_clk_ibro_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_ibro, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_ibro_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_ibro, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_ibro_P_status_LEN 1
#define DT_N_S_clocks_S_clk_ibro_P_status_EXISTS 1
#define DT_N_S_clocks_S_clk_ibro_P_compatible {"fixed-clock"}
#define DT_N_S_clocks_S_clk_ibro_P_compatible_IDX_0 "fixed-clock"
#define DT_N_S_clocks_S_clk_ibro_P_compatible_IDX_0_STRING_UNQUOTED fixed-clock
#define DT_N_S_clocks_S_clk_ibro_P_compatible_IDX_0_STRING_TOKEN fixed_clock
#define DT_N_S_clocks_S_clk_ibro_P_compatible_IDX_0_STRING_UPPER_TOKEN FIXED_CLOCK
#define DT_N_S_clocks_S_clk_ibro_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_ibro_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_ibro, compatible, 0)
#define DT_N_S_clocks_S_clk_ibro_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_ibro, compatible, 0)
#define DT_N_S_clocks_S_clk_ibro_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_ibro, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_ibro_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_ibro, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_ibro_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_ibro_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_ibro_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_ibro_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_ibro_P_clock_frequency 7372800
#define DT_N_S_clocks_S_clk_ibro_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk_inro
 *
 * Node identifier: DT_N_S_clocks_S_clk_inro
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_inro_PATH "/clocks/clk_inro"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_inro_FULL_NAME "clk_inro"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_inro_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_inro_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_inro_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_inro_FOREACH_NODELABEL(fn) fn(clk_inro)
#define DT_N_S_clocks_S_clk_inro_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_inro, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_inro_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_inro_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_inro_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_inro_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_inro_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_inro_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_inro_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_inro_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_inro_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_inro_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_inro_ORD 15
#define DT_N_S_clocks_S_clk_inro_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_inro_REQUIRES_ORDS \
	4, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_inro_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_inro_EXISTS 1
#define DT_N_INST_2_fixed_clock DT_N_S_clocks_S_clk_inro
#define DT_N_NODELABEL_clk_inro DT_N_S_clocks_S_clk_inro

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_inro_REG_NUM 0
#define DT_N_S_clocks_S_clk_inro_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_inro_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_inro_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_inro_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_inro_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_inro_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_inro_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_inro_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_inro_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_inro_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_inro_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_clocks_S_clk_inro_P_status "disabled"
#define DT_N_S_clocks_S_clk_inro_P_status_STRING_UNQUOTED disabled
#define DT_N_S_clocks_S_clk_inro_P_status_STRING_TOKEN disabled
#define DT_N_S_clocks_S_clk_inro_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_clk_inro_P_status_IDX_0 "disabled"
#define DT_N_S_clocks_S_clk_inro_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_inro_P_status_ENUM_IDX 2
#define DT_N_S_clocks_S_clk_inro_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_clocks_S_clk_inro_P_status_ENUM_TOKEN disabled
#define DT_N_S_clocks_S_clk_inro_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_clk_inro_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_inro, status, 0)
#define DT_N_S_clocks_S_clk_inro_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_inro, status, 0)
#define DT_N_S_clocks_S_clk_inro_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_inro, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_inro_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_inro, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_inro_P_status_LEN 1
#define DT_N_S_clocks_S_clk_inro_P_status_EXISTS 1
#define DT_N_S_clocks_S_clk_inro_P_compatible {"fixed-clock"}
#define DT_N_S_clocks_S_clk_inro_P_compatible_IDX_0 "fixed-clock"
#define DT_N_S_clocks_S_clk_inro_P_compatible_IDX_0_STRING_UNQUOTED fixed-clock
#define DT_N_S_clocks_S_clk_inro_P_compatible_IDX_0_STRING_TOKEN fixed_clock
#define DT_N_S_clocks_S_clk_inro_P_compatible_IDX_0_STRING_UPPER_TOKEN FIXED_CLOCK
#define DT_N_S_clocks_S_clk_inro_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_inro_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_inro, compatible, 0)
#define DT_N_S_clocks_S_clk_inro_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_inro, compatible, 0)
#define DT_N_S_clocks_S_clk_inro_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_inro, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_inro_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_inro, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_inro_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_inro_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_inro_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_inro_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_inro_P_clock_frequency 80000
#define DT_N_S_clocks_S_clk_inro_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk_iso
 *
 * Node identifier: DT_N_S_clocks_S_clk_iso
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_iso_PATH "/clocks/clk_iso"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_iso_FULL_NAME "clk_iso"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_iso_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_iso_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_clk_iso_NODELABEL_NUM 1
#define DT_N_S_clocks_S_clk_iso_FOREACH_NODELABEL(fn) fn(clk_iso)
#define DT_N_S_clocks_S_clk_iso_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_iso, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_iso_CHILD_NUM 0
#define DT_N_S_clocks_S_clk_iso_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_clk_iso_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_iso_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_iso_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_iso_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_iso_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_iso_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_iso_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_iso_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_iso_ORD 16
#define DT_N_S_clocks_S_clk_iso_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_iso_REQUIRES_ORDS \
	4, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_iso_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_iso_EXISTS 1
#define DT_N_INST_1_fixed_clock DT_N_S_clocks_S_clk_iso
#define DT_N_NODELABEL_clk_iso  DT_N_S_clocks_S_clk_iso

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_iso_REG_NUM 0
#define DT_N_S_clocks_S_clk_iso_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_iso_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_iso_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_iso_IRQ_LEVEL 0
#define DT_N_S_clocks_S_clk_iso_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_iso_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_iso_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_iso_P_wakeup_source 0
#define DT_N_S_clocks_S_clk_iso_P_wakeup_source_EXISTS 1
#define DT_N_S_clocks_S_clk_iso_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_clocks_S_clk_iso_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_clocks_S_clk_iso_P_status "disabled"
#define DT_N_S_clocks_S_clk_iso_P_status_STRING_UNQUOTED disabled
#define DT_N_S_clocks_S_clk_iso_P_status_STRING_TOKEN disabled
#define DT_N_S_clocks_S_clk_iso_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_clk_iso_P_status_IDX_0 "disabled"
#define DT_N_S_clocks_S_clk_iso_P_status_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_iso_P_status_ENUM_IDX 2
#define DT_N_S_clocks_S_clk_iso_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_clocks_S_clk_iso_P_status_ENUM_TOKEN disabled
#define DT_N_S_clocks_S_clk_iso_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_clocks_S_clk_iso_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_iso, status, 0)
#define DT_N_S_clocks_S_clk_iso_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_iso, status, 0)
#define DT_N_S_clocks_S_clk_iso_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_iso, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_iso_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_iso, status, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_iso_P_status_LEN 1
#define DT_N_S_clocks_S_clk_iso_P_status_EXISTS 1
#define DT_N_S_clocks_S_clk_iso_P_compatible {"fixed-clock"}
#define DT_N_S_clocks_S_clk_iso_P_compatible_IDX_0 "fixed-clock"
#define DT_N_S_clocks_S_clk_iso_P_compatible_IDX_0_STRING_UNQUOTED fixed-clock
#define DT_N_S_clocks_S_clk_iso_P_compatible_IDX_0_STRING_TOKEN fixed_clock
#define DT_N_S_clocks_S_clk_iso_P_compatible_IDX_0_STRING_UPPER_TOKEN FIXED_CLOCK
#define DT_N_S_clocks_S_clk_iso_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_iso_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_iso, compatible, 0)
#define DT_N_S_clocks_S_clk_iso_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_iso, compatible, 0)
#define DT_N_S_clocks_S_clk_iso_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_iso, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_iso_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_iso, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_iso_P_compatible_LEN 1
#define DT_N_S_clocks_S_clk_iso_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_clk_iso_P_zephyr_deferred_init 0
#define DT_N_S_clocks_S_clk_iso_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_clocks_S_clk_iso_P_clock_frequency 60000000
#define DT_N_S_clocks_S_clk_iso_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_NODELABEL_NUM 0
#define DT_N_S_cpus_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_CHILD_NUM 1
#define DT_N_S_cpus_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 17
#define DT_N_S_cpus_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	18, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_IRQ_LEVEL 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m4f):
 *   $ZEPHYR_BASE\dts\bindings\cpu\arm,cortex-m4f.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_0_NODELABEL_NUM 1
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL(fn) fn(cpu0)
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(cpu0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 18
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	17, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m4f DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0        DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m4f 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m4f"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m4f
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m4f
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M4F
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE\dts\bindings\led\gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_NODELABEL_NUM 0
#define DT_N_S_leds_FOREACH_NODELABEL(fn) 
#define DT_N_S_leds_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_CHILD_NUM 2
#define DT_N_S_leds_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2)
#define DT_N_S_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_leds_S_led_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_leds_S_led_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 19
#define DT_N_S_leds_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */ \
	9, /* /soc/pin-controller@40008000/gpio@40008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	20, /* /leds/led_1 */ \
	21, /* /leds/led_2 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_IRQ_LEVEL 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /leds/led_1
 *
 * Node identifier: DT_N_S_leds_S_led_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_1_PATH "/leds/led_1"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_1_FULL_NAME "led_1"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_1_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_1_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_1_FOREACH_NODELABEL(fn) fn(led1)
#define DT_N_S_leds_S_led_1_FOREACH_NODELABEL_VARGS(fn, ...) fn(led1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_1_CHILD_NUM 0
#define DT_N_S_leds_S_led_1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_1_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_1_ORD 20
#define DT_N_S_leds_S_led_1_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_1_REQUIRES_ORDS \
	9, /* /soc/pin-controller@40008000/gpio@40008000 */ \
	19, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_1_EXISTS 1
#define DT_N_ALIAS_led0     DT_N_S_leds_S_led_1
#define DT_N_NODELABEL_led1 DT_N_S_leds_S_led_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_1_REG_NUM 0
#define DT_N_S_leds_S_led_1_RANGES_NUM 0
#define DT_N_S_leds_S_led_1_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_1_IRQ_NUM 0
#define DT_N_S_leds_S_led_1_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin 22
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_LEN 1
#define DT_N_S_leds_S_led_1_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label "Red LED"
#define DT_N_S_leds_S_led_1_P_label_STRING_UNQUOTED Red LED
#define DT_N_S_leds_S_led_1_P_label_STRING_TOKEN Red_LED
#define DT_N_S_leds_S_led_1_P_label_STRING_UPPER_TOKEN RED_LED
#define DT_N_S_leds_S_led_1_P_label_IDX_0 "Red LED"
#define DT_N_S_leds_S_led_1_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, label, 0)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_1, label, 0)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_LEN 1
#define DT_N_S_leds_S_led_1_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_2
 *
 * Node identifier: DT_N_S_leds_S_led_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_2_PATH "/leds/led_2"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_2_FULL_NAME "led_2"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_2_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_2_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_2_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_2_FOREACH_NODELABEL(fn) fn(led2)
#define DT_N_S_leds_S_led_2_FOREACH_NODELABEL_VARGS(fn, ...) fn(led2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_2_CHILD_NUM 0
#define DT_N_S_leds_S_led_2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_2_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_2_ORD 21
#define DT_N_S_leds_S_led_2_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_2_REQUIRES_ORDS \
	9, /* /soc/pin-controller@40008000/gpio@40008000 */ \
	19, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_2_EXISTS 1
#define DT_N_ALIAS_led1     DT_N_S_leds_S_led_2
#define DT_N_NODELABEL_led2 DT_N_S_leds_S_led_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_2_REG_NUM 0
#define DT_N_S_leds_S_led_2_RANGES_NUM 0
#define DT_N_S_leds_S_led_2_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_2_IRQ_NUM 0
#define DT_N_S_leds_S_led_2_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_pin 23
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_2, gpios, 0)
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_2, gpios, 0)
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_gpios_LEN 1
#define DT_N_S_leds_S_led_2_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_2_P_label "Blue LED"
#define DT_N_S_leds_S_led_2_P_label_STRING_UNQUOTED Blue LED
#define DT_N_S_leds_S_led_2_P_label_STRING_TOKEN Blue_LED
#define DT_N_S_leds_S_led_2_P_label_STRING_UPPER_TOKEN BLUE_LED
#define DT_N_S_leds_S_led_2_P_label_IDX_0 "Blue LED"
#define DT_N_S_leds_S_led_2_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_2, label, 0)
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_2, label, 0)
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_2, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_2, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_label_LEN 1
#define DT_N_S_leds_S_led_2_P_label_EXISTS 1

/*
 * Devicetree node: /soc/dma@40028000
 *
 * Node identifier: DT_N_S_soc_S_dma_40028000
 *
 * Binding (compatible = adi,max32-dma):
 *   $ZEPHYR_BASE\dts\bindings\dma\adi,max32-dma.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_40028000_PATH "/soc/dma@40028000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_40028000_FULL_NAME "dma@40028000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_40028000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dma_40028000_CHILD_IDX 22

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dma_40028000_NODELABEL_NUM 1
#define DT_N_S_soc_S_dma_40028000_FOREACH_NODELABEL(fn) fn(dma0)
#define DT_N_S_soc_S_dma_40028000_FOREACH_NODELABEL_VARGS(fn, ...) fn(dma0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dma_40028000_CHILD_NUM 0
#define DT_N_S_soc_S_dma_40028000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dma_40028000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_40028000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40028000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40028000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dma_40028000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_40028000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40028000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40028000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_40028000_ORD 22
#define DT_N_S_soc_S_dma_40028000_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_40028000_REQUIRES_ORDS \
	3, /* /soc */ \
	6, /* /soc/clock-controller@40000000 */ \
	7, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_40028000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_40028000_EXISTS 1
#define DT_N_INST_0_adi_max32_dma DT_N_S_soc_S_dma_40028000
#define DT_N_NODELABEL_dma0       DT_N_S_soc_S_dma_40028000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_40028000_REG_NUM 1
#define DT_N_S_soc_S_dma_40028000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_REG_IDX_0_VAL_ADDRESS 1073905664 /* 0x40028000 */
#define DT_N_S_soc_S_dma_40028000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_dma_40028000_RANGES_NUM 0
#define DT_N_S_soc_S_dma_40028000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dma_40028000_IRQ_NUM 8
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_0_VAL_irq 28
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_1_VAL_irq 29
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_2_VAL_irq 30
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_3_VAL_irq 31
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_4_VAL_irq 68
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_5_VAL_irq 69
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_5_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_6_VAL_irq 70
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_6_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_7_VAL_irq 71
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_7_VAL_priority 0
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_IRQ_IDX_7_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40028000_IRQ_LEVEL 1
#define DT_N_S_soc_S_dma_40028000_COMPAT_MATCHES_adi_max32_dma 1
#define DT_N_S_soc_S_dma_40028000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_COMPAT_VENDOR_IDX_0 "Analog Devices, Inc."
#define DT_N_S_soc_S_dma_40028000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_COMPAT_MODEL_IDX_0 "max32-dma"
#define DT_N_S_soc_S_dma_40028000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_40028000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_40028000_P_wakeup_source 0
#define DT_N_S_soc_S_dma_40028000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dma_40028000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_status "okay"
#define DT_N_S_soc_S_dma_40028000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_dma_40028000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_dma_40028000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_dma_40028000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_dma_40028000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_dma_40028000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_dma_40028000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_dma_40028000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40028000, status, 0)
#define DT_N_S_soc_S_dma_40028000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40028000, status, 0)
#define DT_N_S_soc_S_dma_40028000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40028000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40028000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40028000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40028000_P_status_LEN 1
#define DT_N_S_soc_S_dma_40028000_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_compatible {"adi,max32-dma"}
#define DT_N_S_soc_S_dma_40028000_P_compatible_IDX_0 "adi,max32-dma"
#define DT_N_S_soc_S_dma_40028000_P_compatible_IDX_0_STRING_UNQUOTED adi,max32-dma
#define DT_N_S_soc_S_dma_40028000_P_compatible_IDX_0_STRING_TOKEN adi_max32_dma
#define DT_N_S_soc_S_dma_40028000_P_compatible_IDX_0_STRING_UPPER_TOKEN ADI_MAX32_DMA
#define DT_N_S_soc_S_dma_40028000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40028000, compatible, 0)
#define DT_N_S_soc_S_dma_40028000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40028000, compatible, 0)
#define DT_N_S_soc_S_dma_40028000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40028000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40028000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40028000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40028000_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_40028000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_reg {1073905664 /* 0x40028000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_dma_40028000_P_reg_IDX_0 1073905664
#define DT_N_S_soc_S_dma_40028000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_dma_40028000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_interrupts {28 /* 0x1c */, 0 /* 0x0 */, 29 /* 0x1d */, 0 /* 0x0 */, 30 /* 0x1e */, 0 /* 0x0 */, 31 /* 0x1f */, 0 /* 0x0 */, 68 /* 0x44 */, 0 /* 0x0 */, 69 /* 0x45 */, 0 /* 0x0 */, 70 /* 0x46 */, 0 /* 0x0 */, 71 /* 0x47 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_0 28
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_2 29
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_4 30
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_6 31
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_8 68
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_10 69
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_12 70
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_14 71
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_15 0
#define DT_N_S_soc_S_dma_40028000_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40000000
#define DT_N_S_soc_S_dma_40028000_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_dma_40028000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_clocks_IDX_0_VAL_bit 5
#define DT_N_S_soc_S_dma_40028000_P_clocks_IDX_0_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40028000, clocks, 0)
#define DT_N_S_soc_S_dma_40028000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40028000, clocks, 0)
#define DT_N_S_soc_S_dma_40028000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40028000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40028000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40028000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40028000_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_40028000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dma_40028000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dma_40028000_P_dma_channels 8
#define DT_N_S_soc_S_dma_40028000_P_dma_channels_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40008000/i2c0_scl_p0_6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_PATH "/soc/pin-controller@40008000/i2c0_scl_p0_6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_FULL_NAME "i2c0_scl_p0_6"

/* Node parent (/soc/pin-controller@40008000) identifier: */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_PARENT DT_N_S_soc_S_pin_controller_40008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_FOREACH_NODELABEL(fn) fn(i2c0_scl_p0_6)
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c0_scl_p0_6, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_ORD 23
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_REQUIRES_ORDS \
	8, /* /soc/pin-controller@40008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_SUPPORTS_ORDS \
	25, /* /soc/i2c0@4001d000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_EXISTS 1
#define DT_N_NODELABEL_i2c0_scl_p0_6 DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_P_drive_strength 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_P_drive_strength_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_P_input_enable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_P_pinmux 1537
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6_P_pinmux_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40008000/i2c0_sda_p0_7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_PATH "/soc/pin-controller@40008000/i2c0_sda_p0_7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_FULL_NAME "i2c0_sda_p0_7"

/* Node parent (/soc/pin-controller@40008000) identifier: */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_PARENT DT_N_S_soc_S_pin_controller_40008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_FOREACH_NODELABEL(fn) fn(i2c0_sda_p0_7)
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c0_sda_p0_7, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_ORD 24
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_REQUIRES_ORDS \
	8, /* /soc/pin-controller@40008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_SUPPORTS_ORDS \
	25, /* /soc/i2c0@4001d000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_EXISTS 1
#define DT_N_NODELABEL_i2c0_sda_p0_7 DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_P_drive_strength 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_P_drive_strength_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_P_input_enable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_P_pinmux 1793
#define DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7_P_pinmux_EXISTS 1

/*
 * Devicetree node: /soc/i2c0@4001d000
 *
 * Node identifier: DT_N_S_soc_S_i2c0_4001d000
 *
 * Binding (compatible = adi,max32-i2c):
 *   $ZEPHYR_BASE\dts\bindings\i2c\adi,max32-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c0_4001d000_PATH "/soc/i2c0@4001d000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c0_4001d000_FULL_NAME "i2c0@4001d000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c0_4001d000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c0_4001d000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c0_4001d000_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c0_4001d000_FOREACH_NODELABEL(fn) fn(i2c0)
#define DT_N_S_soc_S_i2c0_4001d000_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c0_4001d000_CHILD_NUM 0
#define DT_N_S_soc_S_i2c0_4001d000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c0_4001d000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c0_4001d000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c0_4001d000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c0_4001d000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c0_4001d000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c0_4001d000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c0_4001d000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c0_4001d000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c0_4001d000_ORD 25
#define DT_N_S_soc_S_i2c0_4001d000_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c0_4001d000_REQUIRES_ORDS \
	3, /* /soc */ \
	6, /* /soc/clock-controller@40000000 */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	23, /* /soc/pin-controller@40008000/i2c0_scl_p0_6 */ \
	24, /* /soc/pin-controller@40008000/i2c0_sda_p0_7 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c0_4001d000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c0_4001d000_EXISTS 1
#define DT_N_INST_0_adi_max32_i2c DT_N_S_soc_S_i2c0_4001d000
#define DT_N_NODELABEL_i2c0       DT_N_S_soc_S_i2c0_4001d000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c0_4001d000_REG_NUM 1
#define DT_N_S_soc_S_i2c0_4001d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_REG_IDX_0_VAL_ADDRESS 1073860608 /* 0x4001d000 */
#define DT_N_S_soc_S_i2c0_4001d000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c0_4001d000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c0_4001d000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c0_4001d000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c0_4001d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_IRQ_IDX_0_VAL_irq 13
#define DT_N_S_soc_S_i2c0_4001d000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c0_4001d000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c0_4001d000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c0_4001d000_COMPAT_MATCHES_adi_max32_i2c 1
#define DT_N_S_soc_S_i2c0_4001d000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_COMPAT_VENDOR_IDX_0 "Analog Devices, Inc."
#define DT_N_S_soc_S_i2c0_4001d000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_COMPAT_MODEL_IDX_0 "max32-i2c"
#define DT_N_S_soc_S_i2c0_4001d000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c0_4001d000_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c0_4001d000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c0_4001d000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c0_4001d000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c0_4001d000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6
#define DT_N_S_soc_S_i2c0_4001d000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7

/* Generic property macros: */
#define DT_N_S_soc_S_i2c0_4001d000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c0_4001d000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c0_4001d000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_status "okay"
#define DT_N_S_soc_S_i2c0_4001d000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c0_4001d000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c0_4001d000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c0_4001d000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c0_4001d000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c0_4001d000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c0_4001d000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c0_4001d000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c0_4001d000, status, 0)
#define DT_N_S_soc_S_i2c0_4001d000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c0_4001d000, status, 0)
#define DT_N_S_soc_S_i2c0_4001d000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c0_4001d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c0_4001d000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c0_4001d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c0_4001d000_P_status_LEN 1
#define DT_N_S_soc_S_i2c0_4001d000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_compatible {"adi,max32-i2c"}
#define DT_N_S_soc_S_i2c0_4001d000_P_compatible_IDX_0 "adi,max32-i2c"
#define DT_N_S_soc_S_i2c0_4001d000_P_compatible_IDX_0_STRING_UNQUOTED adi,max32-i2c
#define DT_N_S_soc_S_i2c0_4001d000_P_compatible_IDX_0_STRING_TOKEN adi_max32_i2c
#define DT_N_S_soc_S_i2c0_4001d000_P_compatible_IDX_0_STRING_UPPER_TOKEN ADI_MAX32_I2C
#define DT_N_S_soc_S_i2c0_4001d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c0_4001d000, compatible, 0)
#define DT_N_S_soc_S_i2c0_4001d000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c0_4001d000, compatible, 0)
#define DT_N_S_soc_S_i2c0_4001d000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c0_4001d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c0_4001d000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c0_4001d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c0_4001d000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c0_4001d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_reg {1073860608 /* 0x4001d000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c0_4001d000_P_reg_IDX_0 1073860608
#define DT_N_S_soc_S_i2c0_4001d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c0_4001d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_interrupts {13 /* 0xd */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c0_4001d000_P_interrupts_IDX_0 13
#define DT_N_S_soc_S_i2c0_4001d000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c0_4001d000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40000000
#define DT_N_S_soc_S_i2c0_4001d000_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_i2c0_4001d000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_clocks_IDX_0_VAL_bit 13
#define DT_N_S_soc_S_i2c0_4001d000_P_clocks_IDX_0_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c0_4001d000, clocks, 0)
#define DT_N_S_soc_S_i2c0_4001d000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c0_4001d000, clocks, 0)
#define DT_N_S_soc_S_i2c0_4001d000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c0_4001d000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c0_4001d000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c0_4001d000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c0_4001d000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c0_4001d000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c0_4001d000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c0_4001d000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_sq_size 4
#define DT_N_S_soc_S_i2c0_4001d000_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_cq_size 4
#define DT_N_S_soc_S_i2c0_4001d000_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6
#define DT_N_S_soc_S_i2c0_4001d000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6
#define DT_N_S_soc_S_i2c0_4001d000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7
#define DT_N_S_soc_S_i2c0_4001d000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7
#define DT_N_S_soc_S_i2c0_4001d000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c0_4001d000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_i2c0_4001d000, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c0_4001d000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c0_4001d000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c0_4001d000, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c0_4001d000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c0_4001d000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c0_4001d000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c0_4001d000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c0_4001d000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c0_4001d000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c0_4001d000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_i2c0_4001d000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c0_4001d000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c0_4001d000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c0_4001d000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c0_4001d000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c0_4001d000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c0_4001d000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c0_4001d000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c0_4001d000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c0_4001d000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c0_4001d000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c0_4001d000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c0_4001d000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c0_4001d000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c0_4001d000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c0_4001d000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/i2c1@4001e000
 *
 * Node identifier: DT_N_S_soc_S_i2c1_4001e000
 *
 * Binding (compatible = adi,max32-i2c):
 *   $ZEPHYR_BASE\dts\bindings\i2c\adi,max32-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c1_4001e000_PATH "/soc/i2c1@4001e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c1_4001e000_FULL_NAME "i2c1@4001e000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c1_4001e000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c1_4001e000_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c1_4001e000_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c1_4001e000_FOREACH_NODELABEL(fn) fn(i2c1)
#define DT_N_S_soc_S_i2c1_4001e000_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c1_4001e000_CHILD_NUM 0
#define DT_N_S_soc_S_i2c1_4001e000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c1_4001e000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c1_4001e000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c1_4001e000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c1_4001e000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c1_4001e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c1_4001e000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c1_4001e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c1_4001e000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c1_4001e000_ORD 26
#define DT_N_S_soc_S_i2c1_4001e000_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c1_4001e000_REQUIRES_ORDS \
	3, /* /soc */ \
	6, /* /soc/clock-controller@40000000 */ \
	7, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c1_4001e000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c1_4001e000_EXISTS 1
#define DT_N_INST_1_adi_max32_i2c DT_N_S_soc_S_i2c1_4001e000
#define DT_N_NODELABEL_i2c1       DT_N_S_soc_S_i2c1_4001e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c1_4001e000_REG_NUM 1
#define DT_N_S_soc_S_i2c1_4001e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_REG_IDX_0_VAL_ADDRESS 1073864704 /* 0x4001e000 */
#define DT_N_S_soc_S_i2c1_4001e000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c1_4001e000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c1_4001e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c1_4001e000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c1_4001e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_i2c1_4001e000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c1_4001e000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c1_4001e000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c1_4001e000_COMPAT_MATCHES_adi_max32_i2c 1
#define DT_N_S_soc_S_i2c1_4001e000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_COMPAT_VENDOR_IDX_0 "Analog Devices, Inc."
#define DT_N_S_soc_S_i2c1_4001e000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_COMPAT_MODEL_IDX_0 "max32-i2c"
#define DT_N_S_soc_S_i2c1_4001e000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c1_4001e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c1_4001e000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c1_4001e000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c1_4001e000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_P_status "disabled"
#define DT_N_S_soc_S_i2c1_4001e000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c1_4001e000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c1_4001e000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c1_4001e000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c1_4001e000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c1_4001e000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c1_4001e000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c1_4001e000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c1_4001e000, status, 0)
#define DT_N_S_soc_S_i2c1_4001e000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c1_4001e000, status, 0)
#define DT_N_S_soc_S_i2c1_4001e000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c1_4001e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c1_4001e000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c1_4001e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c1_4001e000_P_status_LEN 1
#define DT_N_S_soc_S_i2c1_4001e000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_P_compatible {"adi,max32-i2c"}
#define DT_N_S_soc_S_i2c1_4001e000_P_compatible_IDX_0 "adi,max32-i2c"
#define DT_N_S_soc_S_i2c1_4001e000_P_compatible_IDX_0_STRING_UNQUOTED adi,max32-i2c
#define DT_N_S_soc_S_i2c1_4001e000_P_compatible_IDX_0_STRING_TOKEN adi_max32_i2c
#define DT_N_S_soc_S_i2c1_4001e000_P_compatible_IDX_0_STRING_UPPER_TOKEN ADI_MAX32_I2C
#define DT_N_S_soc_S_i2c1_4001e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c1_4001e000, compatible, 0)
#define DT_N_S_soc_S_i2c1_4001e000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c1_4001e000, compatible, 0)
#define DT_N_S_soc_S_i2c1_4001e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c1_4001e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c1_4001e000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c1_4001e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c1_4001e000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c1_4001e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_P_reg {1073864704 /* 0x4001e000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c1_4001e000_P_reg_IDX_0 1073864704
#define DT_N_S_soc_S_i2c1_4001e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c1_4001e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_P_interrupts {36 /* 0x24 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c1_4001e000_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_i2c1_4001e000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c1_4001e000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40000000
#define DT_N_S_soc_S_i2c1_4001e000_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_i2c1_4001e000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_P_clocks_IDX_0_VAL_bit 28
#define DT_N_S_soc_S_i2c1_4001e000_P_clocks_IDX_0_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c1_4001e000, clocks, 0)
#define DT_N_S_soc_S_i2c1_4001e000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c1_4001e000, clocks, 0)
#define DT_N_S_soc_S_i2c1_4001e000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c1_4001e000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c1_4001e000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c1_4001e000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c1_4001e000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c1_4001e000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c1_4001e000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c1_4001e000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_P_sq_size 4
#define DT_N_S_soc_S_i2c1_4001e000_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c1_4001e000_P_cq_size 4
#define DT_N_S_soc_S_i2c1_4001e000_P_cq_size_EXISTS 1

/*
 * Devicetree node: /soc/i2c2@4001f000
 *
 * Node identifier: DT_N_S_soc_S_i2c2_4001f000
 *
 * Binding (compatible = adi,max32-i2c):
 *   $ZEPHYR_BASE\dts\bindings\i2c\adi,max32-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c2_4001f000_PATH "/soc/i2c2@4001f000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c2_4001f000_FULL_NAME "i2c2@4001f000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c2_4001f000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c2_4001f000_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c2_4001f000_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c2_4001f000_FOREACH_NODELABEL(fn) fn(i2c2)
#define DT_N_S_soc_S_i2c2_4001f000_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c2_4001f000_CHILD_NUM 0
#define DT_N_S_soc_S_i2c2_4001f000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c2_4001f000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c2_4001f000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c2_4001f000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c2_4001f000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c2_4001f000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c2_4001f000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c2_4001f000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c2_4001f000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c2_4001f000_ORD 27
#define DT_N_S_soc_S_i2c2_4001f000_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c2_4001f000_REQUIRES_ORDS \
	3, /* /soc */ \
	6, /* /soc/clock-controller@40000000 */ \
	7, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c2_4001f000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c2_4001f000_EXISTS 1
#define DT_N_INST_2_adi_max32_i2c DT_N_S_soc_S_i2c2_4001f000
#define DT_N_NODELABEL_i2c2       DT_N_S_soc_S_i2c2_4001f000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c2_4001f000_REG_NUM 1
#define DT_N_S_soc_S_i2c2_4001f000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_REG_IDX_0_VAL_ADDRESS 1073868800 /* 0x4001f000 */
#define DT_N_S_soc_S_i2c2_4001f000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c2_4001f000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c2_4001f000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c2_4001f000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c2_4001f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_IRQ_IDX_0_VAL_irq 62
#define DT_N_S_soc_S_i2c2_4001f000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c2_4001f000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c2_4001f000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c2_4001f000_COMPAT_MATCHES_adi_max32_i2c 1
#define DT_N_S_soc_S_i2c2_4001f000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_COMPAT_VENDOR_IDX_0 "Analog Devices, Inc."
#define DT_N_S_soc_S_i2c2_4001f000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_COMPAT_MODEL_IDX_0 "max32-i2c"
#define DT_N_S_soc_S_i2c2_4001f000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c2_4001f000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c2_4001f000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c2_4001f000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c2_4001f000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_P_status "disabled"
#define DT_N_S_soc_S_i2c2_4001f000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c2_4001f000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c2_4001f000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c2_4001f000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c2_4001f000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c2_4001f000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c2_4001f000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c2_4001f000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c2_4001f000, status, 0)
#define DT_N_S_soc_S_i2c2_4001f000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c2_4001f000, status, 0)
#define DT_N_S_soc_S_i2c2_4001f000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c2_4001f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c2_4001f000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c2_4001f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c2_4001f000_P_status_LEN 1
#define DT_N_S_soc_S_i2c2_4001f000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_P_compatible {"adi,max32-i2c"}
#define DT_N_S_soc_S_i2c2_4001f000_P_compatible_IDX_0 "adi,max32-i2c"
#define DT_N_S_soc_S_i2c2_4001f000_P_compatible_IDX_0_STRING_UNQUOTED adi,max32-i2c
#define DT_N_S_soc_S_i2c2_4001f000_P_compatible_IDX_0_STRING_TOKEN adi_max32_i2c
#define DT_N_S_soc_S_i2c2_4001f000_P_compatible_IDX_0_STRING_UPPER_TOKEN ADI_MAX32_I2C
#define DT_N_S_soc_S_i2c2_4001f000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c2_4001f000, compatible, 0)
#define DT_N_S_soc_S_i2c2_4001f000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c2_4001f000, compatible, 0)
#define DT_N_S_soc_S_i2c2_4001f000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c2_4001f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c2_4001f000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c2_4001f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c2_4001f000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c2_4001f000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_P_reg {1073868800 /* 0x4001f000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c2_4001f000_P_reg_IDX_0 1073868800
#define DT_N_S_soc_S_i2c2_4001f000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c2_4001f000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_P_interrupts {62 /* 0x3e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c2_4001f000_P_interrupts_IDX_0 62
#define DT_N_S_soc_S_i2c2_4001f000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c2_4001f000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40000000
#define DT_N_S_soc_S_i2c2_4001f000_P_clocks_IDX_0_VAL_offset 1
#define DT_N_S_soc_S_i2c2_4001f000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_P_clocks_IDX_0_VAL_bit 24
#define DT_N_S_soc_S_i2c2_4001f000_P_clocks_IDX_0_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c2_4001f000, clocks, 0)
#define DT_N_S_soc_S_i2c2_4001f000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c2_4001f000, clocks, 0)
#define DT_N_S_soc_S_i2c2_4001f000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c2_4001f000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c2_4001f000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c2_4001f000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c2_4001f000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c2_4001f000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c2_4001f000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c2_4001f000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_P_sq_size 4
#define DT_N_S_soc_S_i2c2_4001f000_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c2_4001f000_P_cq_size 4
#define DT_N_S_soc_S_i2c2_4001f000_P_cq_size_EXISTS 1

/*
 * Devicetree node: /soc/memory@20000000
 *
 * Node identifier: DT_N_S_soc_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE\dts\bindings\sram\mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_20000000_PATH "/soc/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_20000000_FULL_NAME "memory@20000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_20000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_20000000_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_20000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_20000000_FOREACH_NODELABEL(fn) fn(sram0)
#define DT_N_S_soc_S_memory_20000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_20000000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_20000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_20000000_ORD 28
#define DT_N_S_soc_S_memory_20000000_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_20000000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_soc_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_soc_S_memory_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_20000000_REG_NUM 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_memory_20000000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_20000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_20000000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20000000, compatible, 0)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20000000, compatible, 0)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_20000000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/memory@20004000
 *
 * Node identifier: DT_N_S_soc_S_memory_20004000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE\dts\bindings\sram\mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_20004000_PATH "/soc/memory@20004000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_20004000_FULL_NAME "memory@20004000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_20004000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_20004000_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_20004000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_20004000_FOREACH_NODELABEL(fn) fn(sram1)
#define DT_N_S_soc_S_memory_20004000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_20004000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_20004000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_20004000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_20004000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20004000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20004000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_20004000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_20004000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20004000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20004000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_20004000_ORD 29
#define DT_N_S_soc_S_memory_20004000_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_20004000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_20004000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_20004000_EXISTS 1
#define DT_N_INST_1_mmio_sram DT_N_S_soc_S_memory_20004000
#define DT_N_NODELABEL_sram1  DT_N_S_soc_S_memory_20004000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_20004000_REG_NUM 1
#define DT_N_S_soc_S_memory_20004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20004000_REG_IDX_0_VAL_ADDRESS 536887296 /* 0x20004000 */
#define DT_N_S_soc_S_memory_20004000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_memory_20004000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_20004000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_20004000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_20004000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_20004000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_20004000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_20004000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_20004000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_20004000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_20004000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_20004000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_memory_20004000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_20004000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_20004000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_20004000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_20004000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_20004000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20004000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20004000, compatible, 0)
#define DT_N_S_soc_S_memory_20004000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20004000, compatible, 0)
#define DT_N_S_soc_S_memory_20004000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20004000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20004000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_20004000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_20004000_P_reg {536887296 /* 0x20004000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_memory_20004000_P_reg_IDX_0 536887296
#define DT_N_S_soc_S_memory_20004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20004000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_memory_20004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_20004000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_20004000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/memory@20008000
 *
 * Node identifier: DT_N_S_soc_S_memory_20008000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE\dts\bindings\sram\mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_20008000_PATH "/soc/memory@20008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_20008000_FULL_NAME "memory@20008000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_20008000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_20008000_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_20008000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_20008000_FOREACH_NODELABEL(fn) fn(sram2)
#define DT_N_S_soc_S_memory_20008000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_20008000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_20008000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_20008000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_20008000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20008000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20008000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_20008000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_20008000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20008000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20008000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_20008000_ORD 30
#define DT_N_S_soc_S_memory_20008000_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_20008000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_20008000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_20008000_EXISTS 1
#define DT_N_INST_2_mmio_sram DT_N_S_soc_S_memory_20008000
#define DT_N_NODELABEL_sram2  DT_N_S_soc_S_memory_20008000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_20008000_REG_NUM 1
#define DT_N_S_soc_S_memory_20008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20008000_REG_IDX_0_VAL_ADDRESS 536903680 /* 0x20008000 */
#define DT_N_S_soc_S_memory_20008000_REG_IDX_0_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_soc_S_memory_20008000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_20008000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_20008000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_20008000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_20008000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_20008000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_20008000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_20008000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_20008000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_20008000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_20008000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_memory_20008000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_20008000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_20008000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_20008000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_20008000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_20008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20008000, compatible, 0)
#define DT_N_S_soc_S_memory_20008000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20008000, compatible, 0)
#define DT_N_S_soc_S_memory_20008000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20008000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20008000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_20008000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_20008000_P_reg {536903680 /* 0x20008000 */, 32768 /* 0x8000 */}
#define DT_N_S_soc_S_memory_20008000_P_reg_IDX_0 536903680
#define DT_N_S_soc_S_memory_20008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20008000_P_reg_IDX_1 32768
#define DT_N_S_soc_S_memory_20008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_20008000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_20008000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/memory@20010000
 *
 * Node identifier: DT_N_S_soc_S_memory_20010000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE\dts\bindings\sram\mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_20010000_PATH "/soc/memory@20010000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_20010000_FULL_NAME "memory@20010000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_20010000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_20010000_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_20010000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_20010000_FOREACH_NODELABEL(fn) fn(sram3)
#define DT_N_S_soc_S_memory_20010000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_20010000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_20010000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_20010000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_20010000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20010000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20010000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_20010000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_20010000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20010000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20010000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_20010000_ORD 31
#define DT_N_S_soc_S_memory_20010000_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_20010000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_20010000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_20010000_EXISTS 1
#define DT_N_INST_3_mmio_sram DT_N_S_soc_S_memory_20010000
#define DT_N_NODELABEL_sram3  DT_N_S_soc_S_memory_20010000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_20010000_REG_NUM 1
#define DT_N_S_soc_S_memory_20010000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20010000_REG_IDX_0_VAL_ADDRESS 536936448 /* 0x20010000 */
#define DT_N_S_soc_S_memory_20010000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_memory_20010000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_20010000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_20010000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_20010000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_20010000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_20010000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_20010000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_20010000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_20010000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_20010000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_20010000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_memory_20010000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_20010000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_20010000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_20010000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_20010000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_20010000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20010000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20010000, compatible, 0)
#define DT_N_S_soc_S_memory_20010000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20010000, compatible, 0)
#define DT_N_S_soc_S_memory_20010000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20010000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20010000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_20010000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_20010000_P_reg {536936448 /* 0x20010000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_memory_20010000_P_reg_IDX_0 536936448
#define DT_N_S_soc_S_memory_20010000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20010000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_memory_20010000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20010000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_20010000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_20010000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/memory@20020000
 *
 * Node identifier: DT_N_S_soc_S_memory_20020000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE\dts\bindings\sram\mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_20020000_PATH "/soc/memory@20020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_20020000_FULL_NAME "memory@20020000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_20020000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_20020000_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_20020000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_20020000_FOREACH_NODELABEL(fn) fn(sram4)
#define DT_N_S_soc_S_memory_20020000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram4, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_20020000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_20020000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_20020000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_20020000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20020000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20020000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_20020000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_20020000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20020000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_20020000_ORD 32
#define DT_N_S_soc_S_memory_20020000_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_20020000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_20020000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_20020000_EXISTS 1
#define DT_N_INST_4_mmio_sram DT_N_S_soc_S_memory_20020000
#define DT_N_NODELABEL_sram4  DT_N_S_soc_S_memory_20020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_20020000_REG_NUM 1
#define DT_N_S_soc_S_memory_20020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20020000_REG_IDX_0_VAL_ADDRESS 537001984 /* 0x20020000 */
#define DT_N_S_soc_S_memory_20020000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_memory_20020000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_20020000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_20020000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_20020000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_20020000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_20020000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_20020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_20020000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_20020000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_20020000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_20020000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_memory_20020000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_20020000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_20020000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_20020000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_20020000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_20020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20020000, compatible, 0)
#define DT_N_S_soc_S_memory_20020000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20020000, compatible, 0)
#define DT_N_S_soc_S_memory_20020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20020000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20020000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_20020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_20020000_P_reg {537001984 /* 0x20020000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_memory_20020000_P_reg_IDX_0 537001984
#define DT_N_S_soc_S_memory_20020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20020000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_memory_20020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_20020000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_20020000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/memory@20021000
 *
 * Node identifier: DT_N_S_soc_S_memory_20021000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE\dts\bindings\sram\mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_20021000_PATH "/soc/memory@20021000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_20021000_FULL_NAME "memory@20021000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_20021000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_20021000_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_20021000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_20021000_FOREACH_NODELABEL(fn) fn(sram5)
#define DT_N_S_soc_S_memory_20021000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram5, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_20021000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_20021000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_20021000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_20021000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20021000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20021000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_20021000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_20021000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20021000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20021000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_20021000_ORD 33
#define DT_N_S_soc_S_memory_20021000_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_20021000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_20021000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_20021000_EXISTS 1
#define DT_N_INST_5_mmio_sram DT_N_S_soc_S_memory_20021000
#define DT_N_NODELABEL_sram5  DT_N_S_soc_S_memory_20021000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_20021000_REG_NUM 1
#define DT_N_S_soc_S_memory_20021000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20021000_REG_IDX_0_VAL_ADDRESS 537006080 /* 0x20021000 */
#define DT_N_S_soc_S_memory_20021000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_memory_20021000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_20021000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_20021000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_20021000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_20021000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_20021000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_20021000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_20021000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_20021000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_20021000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_20021000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_memory_20021000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_20021000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_20021000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_20021000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_20021000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_20021000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20021000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20021000, compatible, 0)
#define DT_N_S_soc_S_memory_20021000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20021000, compatible, 0)
#define DT_N_S_soc_S_memory_20021000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20021000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20021000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_20021000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_20021000_P_reg {537006080 /* 0x20021000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_memory_20021000_P_reg_IDX_0 537006080
#define DT_N_S_soc_S_memory_20021000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20021000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_memory_20021000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20021000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_20021000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_20021000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/memory@20022000
 *
 * Node identifier: DT_N_S_soc_S_memory_20022000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE\dts\bindings\sram\mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_20022000_PATH "/soc/memory@20022000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_20022000_FULL_NAME "memory@20022000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_20022000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_20022000_CHILD_IDX 19

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_20022000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_20022000_FOREACH_NODELABEL(fn) fn(sram6)
#define DT_N_S_soc_S_memory_20022000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram6, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_20022000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_20022000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_20022000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_20022000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20022000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20022000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_20022000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_20022000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20022000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20022000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_20022000_ORD 34
#define DT_N_S_soc_S_memory_20022000_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_20022000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_20022000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_20022000_EXISTS 1
#define DT_N_INST_6_mmio_sram DT_N_S_soc_S_memory_20022000
#define DT_N_NODELABEL_sram6  DT_N_S_soc_S_memory_20022000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_20022000_REG_NUM 1
#define DT_N_S_soc_S_memory_20022000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20022000_REG_IDX_0_VAL_ADDRESS 537010176 /* 0x20022000 */
#define DT_N_S_soc_S_memory_20022000_REG_IDX_0_VAL_SIZE 8192 /* 0x2000 */
#define DT_N_S_soc_S_memory_20022000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_20022000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_20022000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_20022000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_20022000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_20022000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_20022000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_20022000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_20022000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_20022000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_20022000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_memory_20022000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_20022000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_20022000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_20022000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_20022000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_20022000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20022000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20022000, compatible, 0)
#define DT_N_S_soc_S_memory_20022000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20022000, compatible, 0)
#define DT_N_S_soc_S_memory_20022000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20022000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20022000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20022000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20022000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_20022000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_20022000_P_reg {537010176 /* 0x20022000 */, 8192 /* 0x2000 */}
#define DT_N_S_soc_S_memory_20022000_P_reg_IDX_0 537010176
#define DT_N_S_soc_S_memory_20022000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20022000_P_reg_IDX_1 8192
#define DT_N_S_soc_S_memory_20022000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20022000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_20022000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_20022000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/memory@20024000
 *
 * Node identifier: DT_N_S_soc_S_memory_20024000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE\dts\bindings\sram\mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_20024000_PATH "/soc/memory@20024000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_20024000_FULL_NAME "memory@20024000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_20024000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_20024000_CHILD_IDX 20

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_20024000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_20024000_FOREACH_NODELABEL(fn) fn(sram7)
#define DT_N_S_soc_S_memory_20024000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram7, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_20024000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_20024000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_20024000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_20024000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20024000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20024000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_20024000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_20024000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20024000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20024000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_20024000_ORD 35
#define DT_N_S_soc_S_memory_20024000_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_20024000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_20024000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_20024000_EXISTS 1
#define DT_N_INST_7_mmio_sram DT_N_S_soc_S_memory_20024000
#define DT_N_NODELABEL_sram7  DT_N_S_soc_S_memory_20024000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_20024000_REG_NUM 1
#define DT_N_S_soc_S_memory_20024000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20024000_REG_IDX_0_VAL_ADDRESS 537018368 /* 0x20024000 */
#define DT_N_S_soc_S_memory_20024000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_memory_20024000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_20024000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_20024000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_20024000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_20024000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_20024000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_20024000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_20024000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_20024000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_20024000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_20024000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_memory_20024000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_20024000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_20024000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_20024000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_20024000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_20024000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20024000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20024000, compatible, 0)
#define DT_N_S_soc_S_memory_20024000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20024000, compatible, 0)
#define DT_N_S_soc_S_memory_20024000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20024000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20024000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20024000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20024000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_20024000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_20024000_P_reg {537018368 /* 0x20024000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_memory_20024000_P_reg_IDX_0 537018368
#define DT_N_S_soc_S_memory_20024000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20024000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_memory_20024000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20024000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_20024000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_20024000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40008000/uart0a_rx_p0_8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_PATH "/soc/pin-controller@40008000/uart0a_rx_p0_8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_FULL_NAME "uart0a_rx_p0_8"

/* Node parent (/soc/pin-controller@40008000) identifier: */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_PARENT DT_N_S_soc_S_pin_controller_40008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_FOREACH_NODELABEL(fn) fn(uart0a_rx_p0_8)
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart0a_rx_p0_8, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_ORD 36
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_REQUIRES_ORDS \
	8, /* /soc/pin-controller@40008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_SUPPORTS_ORDS \
	38, /* /soc/serial@40042000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_EXISTS 1
#define DT_N_NODELABEL_uart0a_rx_p0_8 DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_P_drive_strength 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_P_drive_strength_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_P_input_enable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_P_pinmux 2049
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8_P_pinmux_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40008000/uart0a_tx_p0_9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_PATH "/soc/pin-controller@40008000/uart0a_tx_p0_9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_FULL_NAME "uart0a_tx_p0_9"

/* Node parent (/soc/pin-controller@40008000) identifier: */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_PARENT DT_N_S_soc_S_pin_controller_40008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_FOREACH_NODELABEL(fn) fn(uart0a_tx_p0_9)
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart0a_tx_p0_9, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_ORD 37
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_REQUIRES_ORDS \
	8, /* /soc/pin-controller@40008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_SUPPORTS_ORDS \
	38, /* /soc/serial@40042000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_EXISTS 1
#define DT_N_NODELABEL_uart0a_tx_p0_9 DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_P_drive_strength 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_P_drive_strength_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_P_input_enable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_P_pinmux 2305
#define DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9_P_pinmux_EXISTS 1

/*
 * Devicetree node: /soc/serial@40042000
 *
 * Node identifier: DT_N_S_soc_S_serial_40042000
 *
 * Binding (compatible = adi,max32-uart):
 *   $ZEPHYR_BASE\dts\bindings\serial\adi,max32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40042000_PATH "/soc/serial@40042000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40042000_FULL_NAME "serial@40042000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40042000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40042000_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40042000_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40042000_FOREACH_NODELABEL(fn) fn(uart0)
#define DT_N_S_soc_S_serial_40042000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40042000_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40042000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40042000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40042000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40042000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40042000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40042000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40042000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40042000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40042000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40042000_ORD 38
#define DT_N_S_soc_S_serial_40042000_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40042000_REQUIRES_ORDS \
	3, /* /soc */ \
	6, /* /soc/clock-controller@40000000 */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	36, /* /soc/pin-controller@40008000/uart0a_rx_p0_8 */ \
	37, /* /soc/pin-controller@40008000/uart0a_tx_p0_9 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40042000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40042000_EXISTS 1
#define DT_N_INST_0_adi_max32_uart DT_N_S_soc_S_serial_40042000
#define DT_N_NODELABEL_uart0       DT_N_S_soc_S_serial_40042000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40042000_REG_NUM 1
#define DT_N_S_soc_S_serial_40042000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_REG_IDX_0_VAL_ADDRESS 1074012160 /* 0x40042000 */
#define DT_N_S_soc_S_serial_40042000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_serial_40042000_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40042000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40042000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40042000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_IRQ_IDX_0_VAL_irq 14
#define DT_N_S_soc_S_serial_40042000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40042000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40042000_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40042000_COMPAT_MATCHES_adi_max32_uart 1
#define DT_N_S_soc_S_serial_40042000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_COMPAT_VENDOR_IDX_0 "Analog Devices, Inc."
#define DT_N_S_soc_S_serial_40042000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_COMPAT_MODEL_IDX_0 "max32-uart"
#define DT_N_S_soc_S_serial_40042000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40042000_PINCTRL_NUM 1
#define DT_N_S_soc_S_serial_40042000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_serial_40042000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40042000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_serial_40042000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9
#define DT_N_S_soc_S_serial_40042000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40042000_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40042000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40042000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_status "okay"
#define DT_N_S_soc_S_serial_40042000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_serial_40042000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_serial_40042000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40042000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_serial_40042000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40042000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_serial_40042000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40042000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40042000, status, 0)
#define DT_N_S_soc_S_serial_40042000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40042000, status, 0)
#define DT_N_S_soc_S_serial_40042000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40042000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40042000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40042000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40042000_P_status_LEN 1
#define DT_N_S_soc_S_serial_40042000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_compatible {"adi,max32-uart"}
#define DT_N_S_soc_S_serial_40042000_P_compatible_IDX_0 "adi,max32-uart"
#define DT_N_S_soc_S_serial_40042000_P_compatible_IDX_0_STRING_UNQUOTED adi,max32-uart
#define DT_N_S_soc_S_serial_40042000_P_compatible_IDX_0_STRING_TOKEN adi_max32_uart
#define DT_N_S_soc_S_serial_40042000_P_compatible_IDX_0_STRING_UPPER_TOKEN ADI_MAX32_UART
#define DT_N_S_soc_S_serial_40042000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40042000, compatible, 0)
#define DT_N_S_soc_S_serial_40042000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40042000, compatible, 0)
#define DT_N_S_soc_S_serial_40042000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40042000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40042000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40042000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40042000_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40042000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_reg {1074012160 /* 0x40042000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_serial_40042000_P_reg_IDX_0 1074012160
#define DT_N_S_soc_S_serial_40042000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_serial_40042000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_interrupts {14 /* 0xe */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40042000_P_interrupts_IDX_0 14
#define DT_N_S_soc_S_serial_40042000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40042000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40000000
#define DT_N_S_soc_S_serial_40042000_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_serial_40042000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_clocks_IDX_0_VAL_bit 9
#define DT_N_S_soc_S_serial_40042000_P_clocks_IDX_0_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40042000, clocks, 0)
#define DT_N_S_soc_S_serial_40042000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40042000, clocks, 0)
#define DT_N_S_soc_S_serial_40042000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40042000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40042000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40042000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40042000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40042000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40042000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_current_speed 115200
#define DT_N_S_soc_S_serial_40042000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40042000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_parity "none"
#define DT_N_S_soc_S_serial_40042000_P_parity_STRING_UNQUOTED none
#define DT_N_S_soc_S_serial_40042000_P_parity_STRING_TOKEN none
#define DT_N_S_soc_S_serial_40042000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_soc_S_serial_40042000_P_parity_IDX_0 "none"
#define DT_N_S_soc_S_serial_40042000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_parity_ENUM_IDX 0
#define DT_N_S_soc_S_serial_40042000_P_parity_ENUM_VAL_none_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_parity_ENUM_TOKEN none
#define DT_N_S_soc_S_serial_40042000_P_parity_ENUM_UPPER_TOKEN NONE
#define DT_N_S_soc_S_serial_40042000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40042000, parity, 0)
#define DT_N_S_soc_S_serial_40042000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40042000, parity, 0)
#define DT_N_S_soc_S_serial_40042000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40042000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40042000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40042000, parity, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40042000_P_parity_LEN 1
#define DT_N_S_soc_S_serial_40042000_P_parity_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_data_bits 8
#define DT_N_S_soc_S_serial_40042000_P_data_bits_ENUM_IDX 3
#define DT_N_S_soc_S_serial_40042000_P_data_bits_ENUM_VAL_8_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_data_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9
#define DT_N_S_soc_S_serial_40042000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9
#define DT_N_S_soc_S_serial_40042000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8
#define DT_N_S_soc_S_serial_40042000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8
#define DT_N_S_soc_S_serial_40042000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40042000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_serial_40042000, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40042000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40042000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40042000, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40042000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40042000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40042000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40042000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40042000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_serial_40042000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40042000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_serial_40042000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_serial_40042000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_serial_40042000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_serial_40042000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_serial_40042000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40042000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40042000, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40042000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40042000, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40042000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40042000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40042000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40042000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40042000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_serial_40042000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_clock_source 0
#define DT_N_S_soc_S_serial_40042000_P_clock_source_ENUM_IDX 0
#define DT_N_S_soc_S_serial_40042000_P_clock_source_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_serial_40042000_P_clock_source_EXISTS 1

/*
 * Devicetree node: /soc/serial@40043000
 *
 * Node identifier: DT_N_S_soc_S_serial_40043000
 *
 * Binding (compatible = adi,max32-uart):
 *   $ZEPHYR_BASE\dts\bindings\serial\adi,max32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40043000_PATH "/soc/serial@40043000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40043000_FULL_NAME "serial@40043000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40043000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40043000_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40043000_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40043000_FOREACH_NODELABEL(fn) fn(uart1)
#define DT_N_S_soc_S_serial_40043000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40043000_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40043000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40043000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40043000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40043000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40043000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40043000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40043000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40043000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40043000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40043000_ORD 39
#define DT_N_S_soc_S_serial_40043000_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40043000_REQUIRES_ORDS \
	3, /* /soc */ \
	6, /* /soc/clock-controller@40000000 */ \
	7, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40043000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40043000_EXISTS 1
#define DT_N_INST_1_adi_max32_uart DT_N_S_soc_S_serial_40043000
#define DT_N_NODELABEL_uart1       DT_N_S_soc_S_serial_40043000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40043000_REG_NUM 1
#define DT_N_S_soc_S_serial_40043000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_REG_IDX_0_VAL_ADDRESS 1074016256 /* 0x40043000 */
#define DT_N_S_soc_S_serial_40043000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_serial_40043000_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40043000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40043000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40043000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_IRQ_IDX_0_VAL_irq 15
#define DT_N_S_soc_S_serial_40043000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40043000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40043000_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40043000_COMPAT_MATCHES_adi_max32_uart 1
#define DT_N_S_soc_S_serial_40043000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_COMPAT_VENDOR_IDX_0 "Analog Devices, Inc."
#define DT_N_S_soc_S_serial_40043000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_COMPAT_MODEL_IDX_0 "max32-uart"
#define DT_N_S_soc_S_serial_40043000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40043000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40043000_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40043000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40043000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_P_status "disabled"
#define DT_N_S_soc_S_serial_40043000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40043000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40043000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40043000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40043000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40043000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40043000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40043000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40043000, status, 0)
#define DT_N_S_soc_S_serial_40043000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40043000, status, 0)
#define DT_N_S_soc_S_serial_40043000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40043000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40043000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40043000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40043000_P_status_LEN 1
#define DT_N_S_soc_S_serial_40043000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_P_compatible {"adi,max32-uart"}
#define DT_N_S_soc_S_serial_40043000_P_compatible_IDX_0 "adi,max32-uart"
#define DT_N_S_soc_S_serial_40043000_P_compatible_IDX_0_STRING_UNQUOTED adi,max32-uart
#define DT_N_S_soc_S_serial_40043000_P_compatible_IDX_0_STRING_TOKEN adi_max32_uart
#define DT_N_S_soc_S_serial_40043000_P_compatible_IDX_0_STRING_UPPER_TOKEN ADI_MAX32_UART
#define DT_N_S_soc_S_serial_40043000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40043000, compatible, 0)
#define DT_N_S_soc_S_serial_40043000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40043000, compatible, 0)
#define DT_N_S_soc_S_serial_40043000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40043000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40043000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40043000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40043000_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40043000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_P_reg {1074016256 /* 0x40043000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_serial_40043000_P_reg_IDX_0 1074016256
#define DT_N_S_soc_S_serial_40043000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_serial_40043000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_P_interrupts {15 /* 0xf */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40043000_P_interrupts_IDX_0 15
#define DT_N_S_soc_S_serial_40043000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40043000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40000000
#define DT_N_S_soc_S_serial_40043000_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_serial_40043000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_P_clocks_IDX_0_VAL_bit 10
#define DT_N_S_soc_S_serial_40043000_P_clocks_IDX_0_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40043000, clocks, 0)
#define DT_N_S_soc_S_serial_40043000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40043000, clocks, 0)
#define DT_N_S_soc_S_serial_40043000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40043000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40043000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40043000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40043000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40043000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40043000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40043000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_P_clock_source 0
#define DT_N_S_soc_S_serial_40043000_P_clock_source_ENUM_IDX 0
#define DT_N_S_soc_S_serial_40043000_P_clock_source_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_serial_40043000_P_clock_source_EXISTS 1

/*
 * Devicetree node: /soc/serial@40044000
 *
 * Node identifier: DT_N_S_soc_S_serial_40044000
 *
 * Binding (compatible = adi,max32-uart):
 *   $ZEPHYR_BASE\dts\bindings\serial\adi,max32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40044000_PATH "/soc/serial@40044000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40044000_FULL_NAME "serial@40044000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40044000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40044000_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40044000_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40044000_FOREACH_NODELABEL(fn) fn(uart2)
#define DT_N_S_soc_S_serial_40044000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40044000_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40044000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40044000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40044000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40044000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40044000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40044000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40044000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40044000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40044000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40044000_ORD 40
#define DT_N_S_soc_S_serial_40044000_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40044000_REQUIRES_ORDS \
	3, /* /soc */ \
	6, /* /soc/clock-controller@40000000 */ \
	7, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40044000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40044000_EXISTS 1
#define DT_N_INST_2_adi_max32_uart DT_N_S_soc_S_serial_40044000
#define DT_N_NODELABEL_uart2       DT_N_S_soc_S_serial_40044000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40044000_REG_NUM 1
#define DT_N_S_soc_S_serial_40044000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_REG_IDX_0_VAL_ADDRESS 1074020352 /* 0x40044000 */
#define DT_N_S_soc_S_serial_40044000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_serial_40044000_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40044000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40044000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40044000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_IRQ_IDX_0_VAL_irq 34
#define DT_N_S_soc_S_serial_40044000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40044000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40044000_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40044000_COMPAT_MATCHES_adi_max32_uart 1
#define DT_N_S_soc_S_serial_40044000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_COMPAT_VENDOR_IDX_0 "Analog Devices, Inc."
#define DT_N_S_soc_S_serial_40044000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_COMPAT_MODEL_IDX_0 "max32-uart"
#define DT_N_S_soc_S_serial_40044000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40044000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40044000_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40044000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40044000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_P_status "disabled"
#define DT_N_S_soc_S_serial_40044000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40044000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40044000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40044000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40044000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40044000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40044000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40044000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40044000, status, 0)
#define DT_N_S_soc_S_serial_40044000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40044000, status, 0)
#define DT_N_S_soc_S_serial_40044000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40044000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40044000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40044000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40044000_P_status_LEN 1
#define DT_N_S_soc_S_serial_40044000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_P_compatible {"adi,max32-uart"}
#define DT_N_S_soc_S_serial_40044000_P_compatible_IDX_0 "adi,max32-uart"
#define DT_N_S_soc_S_serial_40044000_P_compatible_IDX_0_STRING_UNQUOTED adi,max32-uart
#define DT_N_S_soc_S_serial_40044000_P_compatible_IDX_0_STRING_TOKEN adi_max32_uart
#define DT_N_S_soc_S_serial_40044000_P_compatible_IDX_0_STRING_UPPER_TOKEN ADI_MAX32_UART
#define DT_N_S_soc_S_serial_40044000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40044000, compatible, 0)
#define DT_N_S_soc_S_serial_40044000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40044000, compatible, 0)
#define DT_N_S_soc_S_serial_40044000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40044000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40044000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40044000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40044000_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40044000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_P_reg {1074020352 /* 0x40044000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_serial_40044000_P_reg_IDX_0 1074020352
#define DT_N_S_soc_S_serial_40044000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_serial_40044000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_P_interrupts {34 /* 0x22 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40044000_P_interrupts_IDX_0 34
#define DT_N_S_soc_S_serial_40044000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40044000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40000000
#define DT_N_S_soc_S_serial_40044000_P_clocks_IDX_0_VAL_offset 1
#define DT_N_S_soc_S_serial_40044000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_P_clocks_IDX_0_VAL_bit 1
#define DT_N_S_soc_S_serial_40044000_P_clocks_IDX_0_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40044000, clocks, 0)
#define DT_N_S_soc_S_serial_40044000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40044000, clocks, 0)
#define DT_N_S_soc_S_serial_40044000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40044000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40044000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40044000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40044000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40044000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40044000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40044000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_P_clock_source 0
#define DT_N_S_soc_S_serial_40044000_P_clock_source_ENUM_IDX 0
#define DT_N_S_soc_S_serial_40044000_P_clock_source_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_serial_40044000_P_clock_source_EXISTS 1

/*
 * Devicetree node: /soc/serial@40145000
 *
 * Node identifier: DT_N_S_soc_S_serial_40145000
 *
 * Binding (compatible = adi,max32-uart):
 *   $ZEPHYR_BASE\dts\bindings\serial\adi,max32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40145000_PATH "/soc/serial@40145000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40145000_FULL_NAME "serial@40145000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40145000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40145000_CHILD_IDX 21

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_serial_40145000_NODELABEL_NUM 1
#define DT_N_S_soc_S_serial_40145000_FOREACH_NODELABEL(fn) fn(uart3)
#define DT_N_S_soc_S_serial_40145000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_serial_40145000_CHILD_NUM 0
#define DT_N_S_soc_S_serial_40145000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_serial_40145000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40145000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40145000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40145000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_serial_40145000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40145000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_serial_40145000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40145000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40145000_ORD 41
#define DT_N_S_soc_S_serial_40145000_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40145000_REQUIRES_ORDS \
	3, /* /soc */ \
	6, /* /soc/clock-controller@40000000 */ \
	7, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40145000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40145000_EXISTS 1
#define DT_N_INST_3_adi_max32_uart DT_N_S_soc_S_serial_40145000
#define DT_N_NODELABEL_uart3       DT_N_S_soc_S_serial_40145000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40145000_REG_NUM 1
#define DT_N_S_soc_S_serial_40145000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_REG_IDX_0_VAL_ADDRESS 1075073024 /* 0x40145000 */
#define DT_N_S_soc_S_serial_40145000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_serial_40145000_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40145000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40145000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40145000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_IRQ_IDX_0_VAL_irq 88
#define DT_N_S_soc_S_serial_40145000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40145000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_serial_40145000_IRQ_LEVEL 1
#define DT_N_S_soc_S_serial_40145000_COMPAT_MATCHES_adi_max32_uart 1
#define DT_N_S_soc_S_serial_40145000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_COMPAT_VENDOR_IDX_0 "Analog Devices, Inc."
#define DT_N_S_soc_S_serial_40145000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_COMPAT_MODEL_IDX_0 "max32-uart"
#define DT_N_S_soc_S_serial_40145000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40145000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40145000_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40145000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_serial_40145000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_P_status "disabled"
#define DT_N_S_soc_S_serial_40145000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_serial_40145000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40145000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40145000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_serial_40145000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40145000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40145000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40145000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40145000, status, 0)
#define DT_N_S_soc_S_serial_40145000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40145000, status, 0)
#define DT_N_S_soc_S_serial_40145000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40145000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40145000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40145000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40145000_P_status_LEN 1
#define DT_N_S_soc_S_serial_40145000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_P_compatible {"adi,max32-uart"}
#define DT_N_S_soc_S_serial_40145000_P_compatible_IDX_0 "adi,max32-uart"
#define DT_N_S_soc_S_serial_40145000_P_compatible_IDX_0_STRING_UNQUOTED adi,max32-uart
#define DT_N_S_soc_S_serial_40145000_P_compatible_IDX_0_STRING_TOKEN adi_max32_uart
#define DT_N_S_soc_S_serial_40145000_P_compatible_IDX_0_STRING_UPPER_TOKEN ADI_MAX32_UART
#define DT_N_S_soc_S_serial_40145000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40145000, compatible, 0)
#define DT_N_S_soc_S_serial_40145000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40145000, compatible, 0)
#define DT_N_S_soc_S_serial_40145000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40145000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40145000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40145000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40145000_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40145000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_P_reg {1075073024 /* 0x40145000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_serial_40145000_P_reg_IDX_0 1075073024
#define DT_N_S_soc_S_serial_40145000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_serial_40145000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_P_interrupts {88 /* 0x58 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40145000_P_interrupts_IDX_0 88
#define DT_N_S_soc_S_serial_40145000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40145000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40000000
#define DT_N_S_soc_S_serial_40145000_P_clocks_IDX_0_VAL_offset 2
#define DT_N_S_soc_S_serial_40145000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_P_clocks_IDX_0_VAL_bit 2
#define DT_N_S_soc_S_serial_40145000_P_clocks_IDX_0_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40145000, clocks, 0)
#define DT_N_S_soc_S_serial_40145000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_serial_40145000, clocks, 0)
#define DT_N_S_soc_S_serial_40145000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40145000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40145000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_serial_40145000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40145000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40145000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_serial_40145000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40145000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_P_clock_source 0
#define DT_N_S_soc_S_serial_40145000_P_clock_source_ENUM_IDX 0
#define DT_N_S_soc_S_serial_40145000_P_clock_source_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_serial_40145000_P_clock_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40008000/spi0_miso_p0_2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_PATH "/soc/pin-controller@40008000/spi0_miso_p0_2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_FULL_NAME "spi0_miso_p0_2"

/* Node parent (/soc/pin-controller@40008000) identifier: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_PARENT DT_N_S_soc_S_pin_controller_40008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_FOREACH_NODELABEL(fn) fn(spi0_miso_p0_2)
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi0_miso_p0_2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_ORD 42
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_REQUIRES_ORDS \
	8, /* /soc/pin-controller@40008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_SUPPORTS_ORDS \
	46, /* /soc/spi@40046000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_EXISTS 1
#define DT_N_NODELABEL_spi0_miso_p0_2 DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_P_drive_strength 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_P_drive_strength_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_P_input_enable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_P_pinmux 513
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2_P_pinmux_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40008000/spi0_mosi_p0_3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_PATH "/soc/pin-controller@40008000/spi0_mosi_p0_3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_FULL_NAME "spi0_mosi_p0_3"

/* Node parent (/soc/pin-controller@40008000) identifier: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_PARENT DT_N_S_soc_S_pin_controller_40008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_FOREACH_NODELABEL(fn) fn(spi0_mosi_p0_3)
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi0_mosi_p0_3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_ORD 43
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_REQUIRES_ORDS \
	8, /* /soc/pin-controller@40008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_SUPPORTS_ORDS \
	46, /* /soc/spi@40046000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_EXISTS 1
#define DT_N_NODELABEL_spi0_mosi_p0_3 DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_P_drive_strength 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_P_drive_strength_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_P_input_enable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_P_pinmux 769
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3_P_pinmux_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40008000/spi0_sck_p0_4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_PATH "/soc/pin-controller@40008000/spi0_sck_p0_4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_FULL_NAME "spi0_sck_p0_4"

/* Node parent (/soc/pin-controller@40008000) identifier: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_PARENT DT_N_S_soc_S_pin_controller_40008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_FOREACH_NODELABEL(fn) fn(spi0_sck_p0_4)
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi0_sck_p0_4, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_ORD 44
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_REQUIRES_ORDS \
	8, /* /soc/pin-controller@40008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_SUPPORTS_ORDS \
	46, /* /soc/spi@40046000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_EXISTS 1
#define DT_N_NODELABEL_spi0_sck_p0_4 DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_P_drive_strength 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_P_drive_strength_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_P_input_enable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_P_pinmux 1025
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4_P_pinmux_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40008000/spi0_ss0_p0_5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_PATH "/soc/pin-controller@40008000/spi0_ss0_p0_5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_FULL_NAME "spi0_ss0_p0_5"

/* Node parent (/soc/pin-controller@40008000) identifier: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_PARENT DT_N_S_soc_S_pin_controller_40008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_FOREACH_NODELABEL(fn) fn(spi0_ss0_p0_5)
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi0_ss0_p0_5, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_ORD 45
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_REQUIRES_ORDS \
	8, /* /soc/pin-controller@40008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_SUPPORTS_ORDS \
	46, /* /soc/spi@40046000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_EXISTS 1
#define DT_N_NODELABEL_spi0_ss0_p0_5 DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_P_drive_strength 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_P_drive_strength_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_P_input_enable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_P_pinmux 1281
#define DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5_P_pinmux_EXISTS 1

/*
 * Devicetree node: /soc/spi@40046000
 *
 * Node identifier: DT_N_S_soc_S_spi_40046000
 *
 * Binding (compatible = adi,max32-spi):
 *   $ZEPHYR_BASE\dts\bindings\spi\adi,max32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40046000_PATH "/soc/spi@40046000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40046000_FULL_NAME "spi@40046000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40046000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40046000_CHILD_IDX 24

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_40046000_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_40046000_FOREACH_NODELABEL(fn) fn(spi0)
#define DT_N_S_soc_S_spi_40046000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40046000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40046000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40046000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40046000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40046000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40046000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40046000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40046000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40046000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40046000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40046000_ORD 46
#define DT_N_S_soc_S_spi_40046000_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40046000_REQUIRES_ORDS \
	3, /* /soc */ \
	6, /* /soc/clock-controller@40000000 */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	42, /* /soc/pin-controller@40008000/spi0_miso_p0_2 */ \
	43, /* /soc/pin-controller@40008000/spi0_mosi_p0_3 */ \
	44, /* /soc/pin-controller@40008000/spi0_sck_p0_4 */ \
	45, /* /soc/pin-controller@40008000/spi0_ss0_p0_5 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40046000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40046000_EXISTS 1
#define DT_N_INST_0_adi_max32_spi DT_N_S_soc_S_spi_40046000
#define DT_N_NODELABEL_spi0       DT_N_S_soc_S_spi_40046000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40046000_REG_NUM 1
#define DT_N_S_soc_S_spi_40046000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_REG_IDX_0_VAL_ADDRESS 1074028544 /* 0x40046000 */
#define DT_N_S_soc_S_spi_40046000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_40046000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40046000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40046000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40046000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_IRQ_IDX_0_VAL_irq 16
#define DT_N_S_soc_S_spi_40046000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_spi_40046000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_40046000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_40046000_COMPAT_MATCHES_adi_max32_spi 1
#define DT_N_S_soc_S_spi_40046000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_COMPAT_VENDOR_IDX_0 "Analog Devices, Inc."
#define DT_N_S_soc_S_spi_40046000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_COMPAT_MODEL_IDX_0 "max32-spi"
#define DT_N_S_soc_S_spi_40046000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40046000_PINCTRL_NUM 1
#define DT_N_S_soc_S_spi_40046000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_40046000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40046000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_40046000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3
#define DT_N_S_soc_S_spi_40046000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2
#define DT_N_S_soc_S_spi_40046000_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4
#define DT_N_S_soc_S_spi_40046000_PINCTRL_NAME_default_IDX_3_PH DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40046000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40046000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40046000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_P_status "okay"
#define DT_N_S_soc_S_spi_40046000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40046000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40046000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40046000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40046000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40046000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40046000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40046000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40046000, status, 0)
#define DT_N_S_soc_S_spi_40046000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40046000, status, 0)
#define DT_N_S_soc_S_spi_40046000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40046000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40046000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40046000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40046000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40046000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_P_compatible {"adi,max32-spi"}
#define DT_N_S_soc_S_spi_40046000_P_compatible_IDX_0 "adi,max32-spi"
#define DT_N_S_soc_S_spi_40046000_P_compatible_IDX_0_STRING_UNQUOTED adi,max32-spi
#define DT_N_S_soc_S_spi_40046000_P_compatible_IDX_0_STRING_TOKEN adi_max32_spi
#define DT_N_S_soc_S_spi_40046000_P_compatible_IDX_0_STRING_UPPER_TOKEN ADI_MAX32_SPI
#define DT_N_S_soc_S_spi_40046000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40046000, compatible, 0)
#define DT_N_S_soc_S_spi_40046000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40046000, compatible, 0)
#define DT_N_S_soc_S_spi_40046000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40046000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40046000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40046000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40046000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40046000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_P_reg {1074028544 /* 0x40046000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_40046000_P_reg_IDX_0 1074028544
#define DT_N_S_soc_S_spi_40046000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_40046000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_P_interrupts {16 /* 0x10 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40046000_P_interrupts_IDX_0 16
#define DT_N_S_soc_S_spi_40046000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_spi_40046000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40000000
#define DT_N_S_soc_S_spi_40046000_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_spi_40046000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_P_clocks_IDX_0_VAL_bit 6
#define DT_N_S_soc_S_spi_40046000_P_clocks_IDX_0_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40046000, clocks, 0)
#define DT_N_S_soc_S_spi_40046000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40046000, clocks, 0)
#define DT_N_S_soc_S_spi_40046000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40046000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40046000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40046000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40046000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40046000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40046000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_0_IDX_3 DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40046000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_spi_40046000, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_spi_40046000, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_spi_40046000, pinctrl_0, 3)
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40046000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40046000, pinctrl_0, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40046000, pinctrl_0, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40046000, pinctrl_0, 3)
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40046000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40046000, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40046000, pinctrl_0, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40046000, pinctrl_0, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40046000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40046000, pinctrl_0, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40046000, pinctrl_0, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40046000, pinctrl_0, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_0_LEN 4
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40046000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40046000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40046000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40046000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_spi_40046000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/spi@40048000
 *
 * Node identifier: DT_N_S_soc_S_spi_40048000
 *
 * Binding (compatible = adi,max32-spi):
 *   $ZEPHYR_BASE\dts\bindings\spi\adi,max32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40048000_PATH "/soc/spi@40048000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40048000_FULL_NAME "spi@40048000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40048000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40048000_CHILD_IDX 26

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_40048000_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_40048000_FOREACH_NODELABEL(fn) fn(spi2)
#define DT_N_S_soc_S_spi_40048000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40048000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40048000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40048000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40048000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40048000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40048000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40048000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40048000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40048000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40048000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40048000_ORD 47
#define DT_N_S_soc_S_spi_40048000_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40048000_REQUIRES_ORDS \
	3, /* /soc */ \
	6, /* /soc/clock-controller@40000000 */ \
	7, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40048000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40048000_EXISTS 1
#define DT_N_INST_2_adi_max32_spi DT_N_S_soc_S_spi_40048000
#define DT_N_NODELABEL_spi2       DT_N_S_soc_S_spi_40048000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40048000_REG_NUM 1
#define DT_N_S_soc_S_spi_40048000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40048000_REG_IDX_0_VAL_ADDRESS 1074036736 /* 0x40048000 */
#define DT_N_S_soc_S_spi_40048000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_40048000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40048000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40048000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40048000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40048000_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_spi_40048000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40048000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40048000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_spi_40048000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40048000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_40048000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_40048000_COMPAT_MATCHES_adi_max32_spi 1
#define DT_N_S_soc_S_spi_40048000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40048000_COMPAT_VENDOR_IDX_0 "Analog Devices, Inc."
#define DT_N_S_soc_S_spi_40048000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40048000_COMPAT_MODEL_IDX_0 "max32-spi"
#define DT_N_S_soc_S_spi_40048000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40048000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40048000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40048000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40048000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40048000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_spi_40048000_P_status "disabled"
#define DT_N_S_soc_S_spi_40048000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40048000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40048000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40048000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40048000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40048000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40048000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40048000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40048000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40048000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40048000, status, 0)
#define DT_N_S_soc_S_spi_40048000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40048000, status, 0)
#define DT_N_S_soc_S_spi_40048000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40048000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40048000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40048000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40048000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40048000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40048000_P_compatible {"adi,max32-spi"}
#define DT_N_S_soc_S_spi_40048000_P_compatible_IDX_0 "adi,max32-spi"
#define DT_N_S_soc_S_spi_40048000_P_compatible_IDX_0_STRING_UNQUOTED adi,max32-spi
#define DT_N_S_soc_S_spi_40048000_P_compatible_IDX_0_STRING_TOKEN adi_max32_spi
#define DT_N_S_soc_S_spi_40048000_P_compatible_IDX_0_STRING_UPPER_TOKEN ADI_MAX32_SPI
#define DT_N_S_soc_S_spi_40048000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40048000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40048000, compatible, 0)
#define DT_N_S_soc_S_spi_40048000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40048000, compatible, 0)
#define DT_N_S_soc_S_spi_40048000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40048000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40048000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40048000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40048000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40048000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40048000_P_reg {1074036736 /* 0x40048000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_40048000_P_reg_IDX_0 1074036736
#define DT_N_S_soc_S_spi_40048000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40048000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_40048000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40048000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40048000_P_interrupts {18 /* 0x12 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40048000_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_spi_40048000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40048000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_spi_40048000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40048000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40048000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40048000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40000000
#define DT_N_S_soc_S_spi_40048000_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_spi_40048000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_spi_40048000_P_clocks_IDX_0_VAL_bit 8
#define DT_N_S_soc_S_spi_40048000_P_clocks_IDX_0_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_spi_40048000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40048000, clocks, 0)
#define DT_N_S_soc_S_spi_40048000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40048000, clocks, 0)
#define DT_N_S_soc_S_spi_40048000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40048000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40048000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40048000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40048000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40048000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40048000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40048000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv7m-systick):
 *   $ZEPHYR_BASE\dts\bindings\timer\arm,armv7m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_e000e010_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL(fn) fn(systick)
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL_VARGS(fn, ...) fn(systick, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM 0
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 48
#define DT_N_S_soc_S_timer_e000e010_ORD_STR_SORTABLE 00048

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv7m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_IRQ_LEVEL 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv7m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv7m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UNQUOTED arm,armv7m-systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv7m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV7M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/trng@4004d000
 *
 * Node identifier: DT_N_S_soc_S_trng_4004d000
 *
 * Binding (compatible = adi,max32-trng):
 *   $ZEPHYR_BASE\dts\bindings\rng\adi,max32-trng.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_trng_4004d000_PATH "/soc/trng@4004d000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_trng_4004d000_FULL_NAME "trng@4004d000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_trng_4004d000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_trng_4004d000_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_trng_4004d000_NODELABEL_NUM 1
#define DT_N_S_soc_S_trng_4004d000_FOREACH_NODELABEL(fn) fn(trng)
#define DT_N_S_soc_S_trng_4004d000_FOREACH_NODELABEL_VARGS(fn, ...) fn(trng, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_trng_4004d000_CHILD_NUM 0
#define DT_N_S_soc_S_trng_4004d000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_trng_4004d000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_trng_4004d000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_trng_4004d000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_trng_4004d000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_trng_4004d000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_trng_4004d000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_trng_4004d000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_trng_4004d000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_trng_4004d000_ORD 49
#define DT_N_S_soc_S_trng_4004d000_ORD_STR_SORTABLE 00049

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_trng_4004d000_REQUIRES_ORDS \
	3, /* /soc */ \
	6, /* /soc/clock-controller@40000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_trng_4004d000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_trng_4004d000_EXISTS 1
#define DT_N_INST_0_adi_max32_trng DT_N_S_soc_S_trng_4004d000
#define DT_N_NODELABEL_trng        DT_N_S_soc_S_trng_4004d000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_trng_4004d000_REG_NUM 1
#define DT_N_S_soc_S_trng_4004d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_4004d000_REG_IDX_0_VAL_ADDRESS 1074057216 /* 0x4004d000 */
#define DT_N_S_soc_S_trng_4004d000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_trng_4004d000_RANGES_NUM 0
#define DT_N_S_soc_S_trng_4004d000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_trng_4004d000_IRQ_NUM 0
#define DT_N_S_soc_S_trng_4004d000_IRQ_LEVEL 0
#define DT_N_S_soc_S_trng_4004d000_COMPAT_MATCHES_adi_max32_trng 1
#define DT_N_S_soc_S_trng_4004d000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_4004d000_COMPAT_VENDOR_IDX_0 "Analog Devices, Inc."
#define DT_N_S_soc_S_trng_4004d000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_4004d000_COMPAT_MODEL_IDX_0 "max32-trng"
#define DT_N_S_soc_S_trng_4004d000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_trng_4004d000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_trng_4004d000_P_wakeup_source 0
#define DT_N_S_soc_S_trng_4004d000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_trng_4004d000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_trng_4004d000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_trng_4004d000_P_status "okay"
#define DT_N_S_soc_S_trng_4004d000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_trng_4004d000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_trng_4004d000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_trng_4004d000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_trng_4004d000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_4004d000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_trng_4004d000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_trng_4004d000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_trng_4004d000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_trng_4004d000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_trng_4004d000, status, 0)
#define DT_N_S_soc_S_trng_4004d000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_trng_4004d000, status, 0)
#define DT_N_S_soc_S_trng_4004d000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_trng_4004d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_trng_4004d000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_trng_4004d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_trng_4004d000_P_status_LEN 1
#define DT_N_S_soc_S_trng_4004d000_P_status_EXISTS 1
#define DT_N_S_soc_S_trng_4004d000_P_compatible {"adi,max32-trng"}
#define DT_N_S_soc_S_trng_4004d000_P_compatible_IDX_0 "adi,max32-trng"
#define DT_N_S_soc_S_trng_4004d000_P_compatible_IDX_0_STRING_UNQUOTED adi,max32-trng
#define DT_N_S_soc_S_trng_4004d000_P_compatible_IDX_0_STRING_TOKEN adi_max32_trng
#define DT_N_S_soc_S_trng_4004d000_P_compatible_IDX_0_STRING_UPPER_TOKEN ADI_MAX32_TRNG
#define DT_N_S_soc_S_trng_4004d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_4004d000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_trng_4004d000, compatible, 0)
#define DT_N_S_soc_S_trng_4004d000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_trng_4004d000, compatible, 0)
#define DT_N_S_soc_S_trng_4004d000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_trng_4004d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_trng_4004d000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_trng_4004d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_trng_4004d000_P_compatible_LEN 1
#define DT_N_S_soc_S_trng_4004d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_trng_4004d000_P_reg {1074057216 /* 0x4004d000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_trng_4004d000_P_reg_IDX_0 1074057216
#define DT_N_S_soc_S_trng_4004d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_4004d000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_trng_4004d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_trng_4004d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_trng_4004d000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_4004d000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40000000
#define DT_N_S_soc_S_trng_4004d000_P_clocks_IDX_0_VAL_offset 1
#define DT_N_S_soc_S_trng_4004d000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_trng_4004d000_P_clocks_IDX_0_VAL_bit 2
#define DT_N_S_soc_S_trng_4004d000_P_clocks_IDX_0_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_trng_4004d000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_trng_4004d000, clocks, 0)
#define DT_N_S_soc_S_trng_4004d000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_trng_4004d000, clocks, 0)
#define DT_N_S_soc_S_trng_4004d000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_trng_4004d000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_trng_4004d000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_trng_4004d000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_trng_4004d000_P_clocks_LEN 1
#define DT_N_S_soc_S_trng_4004d000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_trng_4004d000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_trng_4004d000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40003000
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40003000
 *
 * Binding (compatible = adi,max32-watchdog):
 *   $ZEPHYR_BASE\dts\bindings\watchdog\adi,max32-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40003000_PATH "/soc/watchdog@40003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40003000_FULL_NAME "watchdog@40003000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40003000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40003000_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_watchdog_40003000_NODELABEL_NUM 1
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_NODELABEL(fn) fn(wdt0)
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_NODELABEL_VARGS(fn, ...) fn(wdt0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40003000_CHILD_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40003000_ORD 50
#define DT_N_S_soc_S_watchdog_40003000_ORD_STR_SORTABLE 00050

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40003000_REQUIRES_ORDS \
	3, /* /soc */ \
	6, /* /soc/clock-controller@40000000 */ \
	7, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40003000_EXISTS 1
#define DT_N_ALIAS_watchdog0           DT_N_S_soc_S_watchdog_40003000
#define DT_N_INST_0_adi_max32_watchdog DT_N_S_soc_S_watchdog_40003000
#define DT_N_NODELABEL_wdt0            DT_N_S_soc_S_watchdog_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40003000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40003000_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40003000_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_IRQ_IDX_0_VAL_irq 1
#define DT_N_S_soc_S_watchdog_40003000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_watchdog_40003000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_watchdog_40003000_IRQ_LEVEL 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MATCHES_adi_max32_watchdog 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_VENDOR_IDX_0 "Analog Devices, Inc."
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MODEL_IDX_0 "max32-watchdog"
#define DT_N_S_soc_S_watchdog_40003000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40003000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40003000_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40003000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_40003000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status "okay"
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_40003000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_watchdog_40003000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, status, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40003000, status, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40003000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible {"adi,max32-watchdog"}
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0 "adi,max32-watchdog"
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_STRING_UNQUOTED adi,max32-watchdog
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_STRING_TOKEN adi_max32_watchdog
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_STRING_UPPER_TOKEN ADI_MAX32_WATCHDOG
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg {1073754112 /* 0x40003000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_interrupts {1 /* 0x1 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_watchdog_40003000_P_interrupts_IDX_0 1
#define DT_N_S_soc_S_watchdog_40003000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_watchdog_40003000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40000000
#define DT_N_S_soc_S_watchdog_40003000_P_clocks_IDX_0_VAL_offset 1
#define DT_N_S_soc_S_watchdog_40003000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_clocks_IDX_0_VAL_bit 27
#define DT_N_S_soc_S_watchdog_40003000_P_clocks_IDX_0_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, clocks, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40003000, clocks, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40003000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_clocks_LEN 1
#define DT_N_S_soc_S_watchdog_40003000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_watchdog_40003000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_clock_source 0
#define DT_N_S_soc_S_watchdog_40003000_P_clock_source_ENUM_IDX 0
#define DT_N_S_soc_S_watchdog_40003000_P_clock_source_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_clock_source_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40003400
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40003400
 *
 * Binding (compatible = adi,max32-watchdog):
 *   $ZEPHYR_BASE\dts\bindings\watchdog\adi,max32-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40003400_PATH "/soc/watchdog@40003400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40003400_FULL_NAME "watchdog@40003400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40003400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40003400_CHILD_IDX 23

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_watchdog_40003400_NODELABEL_NUM 1
#define DT_N_S_soc_S_watchdog_40003400_FOREACH_NODELABEL(fn) fn(wdt1)
#define DT_N_S_soc_S_watchdog_40003400_FOREACH_NODELABEL_VARGS(fn, ...) fn(wdt1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40003400_CHILD_NUM 0
#define DT_N_S_soc_S_watchdog_40003400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_watchdog_40003400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40003400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40003400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40003400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40003400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40003400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40003400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40003400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40003400_ORD 51
#define DT_N_S_soc_S_watchdog_40003400_ORD_STR_SORTABLE 00051

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40003400_REQUIRES_ORDS \
	3, /* /soc */ \
	6, /* /soc/clock-controller@40000000 */ \
	7, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40003400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40003400_EXISTS 1
#define DT_N_INST_1_adi_max32_watchdog DT_N_S_soc_S_watchdog_40003400
#define DT_N_NODELABEL_wdt1            DT_N_S_soc_S_watchdog_40003400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40003400_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40003400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_REG_IDX_0_VAL_ADDRESS 1073755136 /* 0x40003400 */
#define DT_N_S_soc_S_watchdog_40003400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40003400_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40003400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40003400_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_40003400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_IRQ_IDX_0_VAL_irq 57
#define DT_N_S_soc_S_watchdog_40003400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_watchdog_40003400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_watchdog_40003400_IRQ_LEVEL 1
#define DT_N_S_soc_S_watchdog_40003400_COMPAT_MATCHES_adi_max32_watchdog 1
#define DT_N_S_soc_S_watchdog_40003400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_COMPAT_VENDOR_IDX_0 "Analog Devices, Inc."
#define DT_N_S_soc_S_watchdog_40003400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_COMPAT_MODEL_IDX_0 "max32-watchdog"
#define DT_N_S_soc_S_watchdog_40003400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40003400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40003400_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40003400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_40003400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_P_status "disabled"
#define DT_N_S_soc_S_watchdog_40003400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_watchdog_40003400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40003400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40003400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_watchdog_40003400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_40003400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40003400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40003400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003400, status, 0)
#define DT_N_S_soc_S_watchdog_40003400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40003400, status, 0)
#define DT_N_S_soc_S_watchdog_40003400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40003400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003400_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_40003400_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_P_compatible {"adi,max32-watchdog"}
#define DT_N_S_soc_S_watchdog_40003400_P_compatible_IDX_0 "adi,max32-watchdog"
#define DT_N_S_soc_S_watchdog_40003400_P_compatible_IDX_0_STRING_UNQUOTED adi,max32-watchdog
#define DT_N_S_soc_S_watchdog_40003400_P_compatible_IDX_0_STRING_TOKEN adi_max32_watchdog
#define DT_N_S_soc_S_watchdog_40003400_P_compatible_IDX_0_STRING_UPPER_TOKEN ADI_MAX32_WATCHDOG
#define DT_N_S_soc_S_watchdog_40003400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003400, compatible, 0)
#define DT_N_S_soc_S_watchdog_40003400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40003400, compatible, 0)
#define DT_N_S_soc_S_watchdog_40003400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40003400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003400_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40003400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_P_reg {1073755136 /* 0x40003400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40003400_P_reg_IDX_0 1073755136
#define DT_N_S_soc_S_watchdog_40003400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40003400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_P_interrupts {57 /* 0x39 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_watchdog_40003400_P_interrupts_IDX_0 57
#define DT_N_S_soc_S_watchdog_40003400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_watchdog_40003400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40000000
#define DT_N_S_soc_S_watchdog_40003400_P_clocks_IDX_0_VAL_offset 1
#define DT_N_S_soc_S_watchdog_40003400_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_P_clocks_IDX_0_VAL_bit 5
#define DT_N_S_soc_S_watchdog_40003400_P_clocks_IDX_0_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003400, clocks, 0)
#define DT_N_S_soc_S_watchdog_40003400_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40003400, clocks, 0)
#define DT_N_S_soc_S_watchdog_40003400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003400_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40003400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003400_P_clocks_LEN 1
#define DT_N_S_soc_S_watchdog_40003400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_watchdog_40003400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_P_clock_source 0
#define DT_N_S_soc_S_watchdog_40003400_P_clock_source_ENUM_IDX 0
#define DT_N_S_soc_S_watchdog_40003400_P_clock_source_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003400_P_clock_source_EXISTS 1

/*
 * Devicetree node: /soc/flash_controller@40029000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40029000
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40029000_PATH "/soc/flash_controller@40029000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40029000_FULL_NAME "flash_controller@40029000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_40029000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40029000_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40029000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40029000_FOREACH_NODELABEL(fn) fn(flc0)
#define DT_N_S_soc_S_flash_controller_40029000_FOREACH_NODELABEL_VARGS(fn, ...) fn(flc0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40029000_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_40029000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_40029000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000)
#define DT_N_S_soc_S_flash_controller_40029000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000)
#define DT_N_S_soc_S_flash_controller_40029000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40029000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40029000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000)
#define DT_N_S_soc_S_flash_controller_40029000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000)
#define DT_N_S_soc_S_flash_controller_40029000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40029000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40029000_ORD 52
#define DT_N_S_soc_S_flash_controller_40029000_ORD_STR_SORTABLE 00052

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40029000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40029000_SUPPORTS_ORDS \
	53, /* /soc/flash_controller@40029000/flash@10000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40029000_EXISTS 1
#define DT_N_INST_0_flash_controller DT_N_S_soc_S_flash_controller_40029000
#define DT_N_NODELABEL_flc0          DT_N_S_soc_S_flash_controller_40029000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40029000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40029000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40029000_REG_IDX_0_VAL_ADDRESS 1073909760 /* 0x40029000 */
#define DT_N_S_soc_S_flash_controller_40029000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_flash_controller_40029000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40029000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40029000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40029000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40029000_COMPAT_MATCHES_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40029000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40029000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40029000_P_compatible {"flash-controller"}
#define DT_N_S_soc_S_flash_controller_40029000_P_compatible_IDX_0 "flash-controller"
#define DT_N_S_soc_S_flash_controller_40029000_P_compatible_IDX_0_STRING_UNQUOTED flash-controller
#define DT_N_S_soc_S_flash_controller_40029000_P_compatible_IDX_0_STRING_TOKEN flash_controller
#define DT_N_S_soc_S_flash_controller_40029000_P_compatible_IDX_0_STRING_UPPER_TOKEN FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_40029000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40029000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40029000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_40029000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40029000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_40029000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40029000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40029000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40029000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40029000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_40029000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40029000_P_reg {1073909760 /* 0x40029000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_flash_controller_40029000_P_reg_IDX_0 1073909760
#define DT_N_S_soc_S_flash_controller_40029000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40029000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_flash_controller_40029000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40029000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40029000_P_status "okay"
#define DT_N_S_soc_S_flash_controller_40029000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_flash_controller_40029000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_flash_controller_40029000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_flash_controller_40029000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_flash_controller_40029000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40029000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_flash_controller_40029000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40029000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_flash_controller_40029000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_flash_controller_40029000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40029000, status, 0)
#define DT_N_S_soc_S_flash_controller_40029000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40029000, status, 0)
#define DT_N_S_soc_S_flash_controller_40029000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40029000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40029000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40029000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40029000_P_status_LEN 1
#define DT_N_S_soc_S_flash_controller_40029000_P_status_EXISTS 1

/*
 * Devicetree node: /soc/flash_controller@40029000/flash@10000000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE\dts\bindings\mtd\soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_PATH "/soc/flash_controller@40029000/flash@10000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_FULL_NAME "flash@10000000"

/* Node parent (/soc/flash_controller@40029000) identifier: */
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_PARENT DT_N_S_soc_S_flash_controller_40029000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_FOREACH_NODELABEL(fn) fn(flash0)
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_ORD 53
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_ORD_STR_SORTABLE 00053

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_REQUIRES_ORDS \
	52, /* /soc/flash_controller@40029000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000
#define DT_N_NODELABEL_flash0    DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_REG_IDX_0_VAL_ADDRESS 268435456 /* 0x10000000 */
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_REG_IDX_0_VAL_SIZE 393216 /* 0x60000 */
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_compatible {"soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_compatible_IDX_0_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_compatible_IDX_0_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_compatible_IDX_0_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_reg {268435456 /* 0x10000000 */, 393216 /* 0x60000 */}
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_reg_IDX_0 268435456
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_reg_IDX_1 393216
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_erase_block_size 8192
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_write_block_size 16
#define DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000_P_write_block_size_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40008000/gpio@40009000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000
 *
 * Binding (compatible = adi,max32-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\adi,max32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_PATH "/soc/pin-controller@40008000/gpio@40009000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_FULL_NAME "gpio@40009000"

/* Node parent (/soc/pin-controller@40008000) identifier: */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_PARENT DT_N_S_soc_S_pin_controller_40008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_FOREACH_NODELABEL(fn) fn(gpio1)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_ORD 54
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_ORD_STR_SORTABLE 00054

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_REQUIRES_ORDS \
	6, /* /soc/clock-controller@40000000 */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/pin-controller@40008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_EXISTS 1
#define DT_N_INST_1_adi_max32_gpio DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000
#define DT_N_NODELABEL_gpio1       DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_REG_IDX_0_VAL_ADDRESS 1073778688 /* 0x40009000 */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_IRQ_NUM 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_IRQ_IDX_0_VAL_irq 25
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_IRQ_LEVEL 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_COMPAT_MATCHES_adi_max32_gpio 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_COMPAT_VENDOR_IDX_0 "Analog Devices, Inc."
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_COMPAT_MODEL_IDX_0 "max32-gpio"
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_status "okay"
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000, status, 0)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000, status, 0)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_status_LEN 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_status_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_compatible {"adi,max32-gpio"}
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_compatible_IDX_0 "adi,max32-gpio"
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_compatible_IDX_0_STRING_UNQUOTED adi,max32-gpio
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_compatible_IDX_0_STRING_TOKEN adi_max32_gpio
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_compatible_IDX_0_STRING_UPPER_TOKEN ADI_MAX32_GPIO
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_reg {1073778688 /* 0x40009000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_reg_IDX_0 1073778688
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_interrupts {25 /* 0x19 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_interrupts_IDX_0 25
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40000000
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_clocks_IDX_0_VAL_bit 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_clocks_IDX_0_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40008000/spi1_miso_p0_14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_PATH "/soc/pin-controller@40008000/spi1_miso_p0_14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_FULL_NAME "spi1_miso_p0_14"

/* Node parent (/soc/pin-controller@40008000) identifier: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_PARENT DT_N_S_soc_S_pin_controller_40008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_FOREACH_NODELABEL(fn) fn(spi1_miso_p0_14)
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi1_miso_p0_14, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_ORD 55
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_ORD_STR_SORTABLE 00055

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_REQUIRES_ORDS \
	8, /* /soc/pin-controller@40008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_SUPPORTS_ORDS \
	59, /* /soc/spi@40047000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_EXISTS 1
#define DT_N_NODELABEL_spi1_miso_p0_14 DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_P_drive_strength 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_P_drive_strength_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_P_input_enable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_P_pinmux 3585
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14_P_pinmux_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40008000/spi1_mosi_p0_15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_PATH "/soc/pin-controller@40008000/spi1_mosi_p0_15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_FULL_NAME "spi1_mosi_p0_15"

/* Node parent (/soc/pin-controller@40008000) identifier: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_PARENT DT_N_S_soc_S_pin_controller_40008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_FOREACH_NODELABEL(fn) fn(spi1_mosi_p0_15)
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi1_mosi_p0_15, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_ORD 56
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_ORD_STR_SORTABLE 00056

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_REQUIRES_ORDS \
	8, /* /soc/pin-controller@40008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_SUPPORTS_ORDS \
	59, /* /soc/spi@40047000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_EXISTS 1
#define DT_N_NODELABEL_spi1_mosi_p0_15 DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_P_drive_strength 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_P_drive_strength_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_P_input_enable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_P_pinmux 3841
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15_P_pinmux_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40008000/spi1_sck_p0_16
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_PATH "/soc/pin-controller@40008000/spi1_sck_p0_16"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_FULL_NAME "spi1_sck_p0_16"

/* Node parent (/soc/pin-controller@40008000) identifier: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_PARENT DT_N_S_soc_S_pin_controller_40008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_FOREACH_NODELABEL(fn) fn(spi1_sck_p0_16)
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi1_sck_p0_16, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_ORD 57
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_ORD_STR_SORTABLE 00057

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_REQUIRES_ORDS \
	8, /* /soc/pin-controller@40008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_SUPPORTS_ORDS \
	59, /* /soc/spi@40047000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_EXISTS 1
#define DT_N_NODELABEL_spi1_sck_p0_16 DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_P_drive_strength 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_P_drive_strength_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_P_input_enable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_P_pinmux 4097
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16_P_pinmux_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40008000/spi1_ss0_p0_17
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_PATH "/soc/pin-controller@40008000/spi1_ss0_p0_17"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_FULL_NAME "spi1_ss0_p0_17"

/* Node parent (/soc/pin-controller@40008000) identifier: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_PARENT DT_N_S_soc_S_pin_controller_40008000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_FOREACH_NODELABEL(fn) fn(spi1_ss0_p0_17)
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi1_ss0_p0_17, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_ORD 58
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_ORD_STR_SORTABLE 00058

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_REQUIRES_ORDS \
	8, /* /soc/pin-controller@40008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_SUPPORTS_ORDS \
	59, /* /soc/spi@40047000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_EXISTS 1
#define DT_N_NODELABEL_spi1_ss0_p0_17 DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_P_drive_strength 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_P_drive_strength_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_P_drive_strength_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_P_drive_strength_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_P_input_enable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_P_output_enable 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_P_output_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_P_output_high_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_P_pinmux 4353
#define DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17_P_pinmux_EXISTS 1

/*
 * Devicetree node: /soc/spi@40047000
 *
 * Node identifier: DT_N_S_soc_S_spi_40047000
 *
 * Binding (compatible = adi,max32-spi):
 *   $ZEPHYR_BASE\dts\bindings\spi\adi,max32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40047000_PATH "/soc/spi@40047000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40047000_FULL_NAME "spi@40047000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40047000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40047000_CHILD_IDX 25

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_40047000_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_40047000_FOREACH_NODELABEL(fn) fn(spi1)
#define DT_N_S_soc_S_spi_40047000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40047000_CHILD_NUM 1
#define DT_N_S_soc_S_spi_40047000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_spi_40047000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_spi_40047000_S_ad74416h_0)
#define DT_N_S_soc_S_spi_40047000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40047000_S_ad74416h_0)
#define DT_N_S_soc_S_spi_40047000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40047000_S_ad74416h_0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40047000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40047000_S_ad74416h_0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40047000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_spi_40047000_S_ad74416h_0)
#define DT_N_S_soc_S_spi_40047000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40047000_S_ad74416h_0)
#define DT_N_S_soc_S_spi_40047000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40047000_S_ad74416h_0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40047000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40047000_S_ad74416h_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40047000_ORD 59
#define DT_N_S_soc_S_spi_40047000_ORD_STR_SORTABLE 00059

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40047000_REQUIRES_ORDS \
	3, /* /soc */ \
	6, /* /soc/clock-controller@40000000 */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	55, /* /soc/pin-controller@40008000/spi1_miso_p0_14 */ \
	56, /* /soc/pin-controller@40008000/spi1_mosi_p0_15 */ \
	57, /* /soc/pin-controller@40008000/spi1_sck_p0_16 */ \
	58, /* /soc/pin-controller@40008000/spi1_ss0_p0_17 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40047000_SUPPORTS_ORDS \
	60, /* /soc/spi@40047000/ad74416h@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40047000_EXISTS 1
#define DT_N_INST_1_adi_max32_spi DT_N_S_soc_S_spi_40047000
#define DT_N_NODELABEL_spi1       DT_N_S_soc_S_spi_40047000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40047000_REG_NUM 1
#define DT_N_S_soc_S_spi_40047000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_REG_IDX_0_VAL_ADDRESS 1074032640 /* 0x40047000 */
#define DT_N_S_soc_S_spi_40047000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_40047000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40047000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40047000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40047000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_IRQ_IDX_0_VAL_irq 17
#define DT_N_S_soc_S_spi_40047000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_spi_40047000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_spi_40047000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_40047000_COMPAT_MATCHES_adi_max32_spi 1
#define DT_N_S_soc_S_spi_40047000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_COMPAT_VENDOR_IDX_0 "Analog Devices, Inc."
#define DT_N_S_soc_S_spi_40047000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_COMPAT_MODEL_IDX_0 "max32-spi"
#define DT_N_S_soc_S_spi_40047000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40047000_PINCTRL_NUM 1
#define DT_N_S_soc_S_spi_40047000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_40047000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40047000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_40047000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15
#define DT_N_S_soc_S_spi_40047000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14
#define DT_N_S_soc_S_spi_40047000_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16
#define DT_N_S_soc_S_spi_40047000_PINCTRL_NAME_default_IDX_3_PH DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40047000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40047000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40047000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_P_status "okay"
#define DT_N_S_soc_S_spi_40047000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40047000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40047000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40047000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40047000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40047000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40047000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40047000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40047000, status, 0)
#define DT_N_S_soc_S_spi_40047000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40047000, status, 0)
#define DT_N_S_soc_S_spi_40047000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40047000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40047000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40047000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40047000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40047000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_P_compatible {"adi,max32-spi"}
#define DT_N_S_soc_S_spi_40047000_P_compatible_IDX_0 "adi,max32-spi"
#define DT_N_S_soc_S_spi_40047000_P_compatible_IDX_0_STRING_UNQUOTED adi,max32-spi
#define DT_N_S_soc_S_spi_40047000_P_compatible_IDX_0_STRING_TOKEN adi_max32_spi
#define DT_N_S_soc_S_spi_40047000_P_compatible_IDX_0_STRING_UPPER_TOKEN ADI_MAX32_SPI
#define DT_N_S_soc_S_spi_40047000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40047000, compatible, 0)
#define DT_N_S_soc_S_spi_40047000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40047000, compatible, 0)
#define DT_N_S_soc_S_spi_40047000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40047000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40047000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40047000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40047000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40047000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_P_reg {1074032640 /* 0x40047000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_40047000_P_reg_IDX_0 1074032640
#define DT_N_S_soc_S_spi_40047000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_40047000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_P_interrupts {17 /* 0x11 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40047000_P_interrupts_IDX_0 17
#define DT_N_S_soc_S_spi_40047000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_spi_40047000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_controller_40000000
#define DT_N_S_soc_S_spi_40047000_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_spi_40047000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_P_clocks_IDX_0_VAL_bit 7
#define DT_N_S_soc_S_spi_40047000_P_clocks_IDX_0_VAL_bit_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40047000, clocks, 0)
#define DT_N_S_soc_S_spi_40047000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40047000, clocks, 0)
#define DT_N_S_soc_S_spi_40047000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40047000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40047000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40047000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40047000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40047000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40047000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_0_IDX_3 DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40047000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_spi_40047000, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_spi_40047000, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_spi_40047000, pinctrl_0, 3)
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40047000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40047000, pinctrl_0, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40047000, pinctrl_0, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40047000, pinctrl_0, 3)
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40047000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40047000, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40047000, pinctrl_0, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40047000, pinctrl_0, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40047000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40047000, pinctrl_0, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40047000, pinctrl_0, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40047000, pinctrl_0, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_0_LEN 4
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40047000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40047000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40047000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40047000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_spi_40047000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/spi@40047000/ad74416h@0
 *
 * Node identifier: DT_N_S_soc_S_spi_40047000_S_ad74416h_0
 *
 * Binding (compatible = adi,ad74416h):
 *   C:/Users/APuthenp/zephyrproject/modules/ad74416h/dts/bindings\adi,ad74416h.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_PATH "/soc/spi@40047000/ad74416h@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_FULL_NAME "ad74416h@0"

/* Node parent (/soc/spi@40047000) identifier: */
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_PARENT DT_N_S_soc_S_spi_40047000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_FOREACH_NODELABEL(fn) fn(ad74416h)
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(ad74416h, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_CHILD_NUM 0
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_ORD 60
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_ORD_STR_SORTABLE 00060

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_REQUIRES_ORDS \
	59, /* /soc/spi@40047000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_EXISTS 1
#define DT_N_ALIAS_my_ad74416h   DT_N_S_soc_S_spi_40047000_S_ad74416h_0
#define DT_N_INST_0_adi_ad74416h DT_N_S_soc_S_spi_40047000_S_ad74416h_0
#define DT_N_NODELABEL_ad74416h  DT_N_S_soc_S_spi_40047000_S_ad74416h_0

/* Bus info (controller: '/soc/spi@40047000', type: '['spi']') */
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_BUS_spi 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_BUS DT_N_S_soc_S_spi_40047000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_REG_NUM 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_COMPAT_MATCHES_adi_ad74416h 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_COMPAT_VENDOR_IDX_0 "Analog Devices, Inc."
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_COMPAT_MODEL_IDX_0 "ad74416h"
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_status "okay"
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40047000_S_ad74416h_0, status, 0)
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40047000_S_ad74416h_0, status, 0)
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40047000_S_ad74416h_0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40047000_S_ad74416h_0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_status_LEN 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_compatible {"adi,ad74416h"}
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_compatible_IDX_0 "adi,ad74416h"
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_compatible_IDX_0_STRING_UNQUOTED adi,ad74416h
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_compatible_IDX_0_STRING_TOKEN adi_ad74416h
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ADI_AD74416H
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40047000_S_ad74416h_0, compatible, 0)
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40047000_S_ad74416h_0, compatible, 0)
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40047000_S_ad74416h_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40047000_S_ad74416h_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_spi_max_frequency 1000000
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_duplex 0
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_duplex_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_duplex_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_frame_format 0
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_frame_format_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_frame_format_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_spi_cpol 0
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_spi_cpol_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_spi_cpha 0
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_spi_cpha_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_spi_hold_cs 0
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_spi_hold_cs_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_dev_addr 0
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_dev_addr_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_dev_addr_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_spi_40047000_S_ad74416h_0_P_dev_addr_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_entropy                 DT_N_S_soc_S_trng_4004d000
#define DT_CHOSEN_zephyr_entropy_EXISTS          1
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_40029000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_serial_40042000
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_serial_40042000
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_soc_S_memory_20010000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000
#define DT_CHOSEN_zephyr_flash_EXISTS            1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_flash_controller_40029000) fn(DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000) fn(DT_N_S_soc_S_clock_controller_40000000) fn(DT_N_S_soc_S_i2c0_4001d000) fn(DT_N_S_soc_S_i2c1_4001e000) fn(DT_N_S_soc_S_i2c2_4001f000) fn(DT_N_S_soc_S_pin_controller_40008000) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5) fn(DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6) fn(DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7) fn(DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8) fn(DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17) fn(DT_N_S_soc_S_serial_40042000) fn(DT_N_S_soc_S_serial_40043000) fn(DT_N_S_soc_S_serial_40044000) fn(DT_N_S_soc_S_trng_4004d000) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_memory_20004000) fn(DT_N_S_soc_S_memory_20008000) fn(DT_N_S_soc_S_memory_20010000) fn(DT_N_S_soc_S_memory_20020000) fn(DT_N_S_soc_S_memory_20021000) fn(DT_N_S_soc_S_memory_20022000) fn(DT_N_S_soc_S_memory_20024000) fn(DT_N_S_soc_S_serial_40145000) fn(DT_N_S_soc_S_dma_40028000) fn(DT_N_S_soc_S_watchdog_40003400) fn(DT_N_S_soc_S_spi_40046000) fn(DT_N_S_soc_S_spi_40047000) fn(DT_N_S_soc_S_spi_40047000_S_ad74416h_0) fn(DT_N_S_soc_S_spi_40048000) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_clk_ipo) fn(DT_N_S_clocks_S_clk_iso) fn(DT_N_S_clocks_S_clk_inro) fn(DT_N_S_clocks_S_clk_ibro) fn(DT_N_S_clocks_S_clk_ertco) fn(DT_N_S_clocks_S_clk_erfo) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2) fn(DT_N_S_buttons) fn(DT_N_S_buttons_S_pb1)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_flash_controller_40029000) fn(DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000) fn(DT_N_S_soc_S_clock_controller_40000000) fn(DT_N_S_soc_S_i2c0_4001d000) fn(DT_N_S_soc_S_pin_controller_40008000) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5) fn(DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6) fn(DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7) fn(DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8) fn(DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17) fn(DT_N_S_soc_S_serial_40042000) fn(DT_N_S_soc_S_trng_4004d000) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_memory_20004000) fn(DT_N_S_soc_S_memory_20008000) fn(DT_N_S_soc_S_memory_20010000) fn(DT_N_S_soc_S_memory_20020000) fn(DT_N_S_soc_S_memory_20021000) fn(DT_N_S_soc_S_memory_20022000) fn(DT_N_S_soc_S_memory_20024000) fn(DT_N_S_soc_S_dma_40028000) fn(DT_N_S_soc_S_spi_40046000) fn(DT_N_S_soc_S_spi_40047000) fn(DT_N_S_soc_S_spi_40047000_S_ad74416h_0) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_clk_ipo) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2) fn(DT_N_S_buttons) fn(DT_N_S_buttons_S_pb1)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40029000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_controller_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c0_4001d000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c1_4001e000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c2_4001f000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40042000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40043000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40044000, __VA_ARGS__) fn(DT_N_S_soc_S_trng_4004d000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20004000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20008000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20010000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20020000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20021000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20022000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20024000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40145000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40028000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003400, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40046000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40047000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40047000_S_ad74416h_0, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40048000, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_ipo, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_iso, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_inro, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_ibro, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_ertco, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_erfo, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__) fn(DT_N_S_buttons_S_pb1, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40029000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000, __VA_ARGS__) fn(DT_N_S_soc_S_clock_controller_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c0_4001d000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_miso_p0_2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_mosi_p0_3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_sck_p0_4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi0_ss0_p0_5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_i2c0_scl_p0_6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_i2c0_sda_p0_7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_uart0a_rx_p0_8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_uart0a_tx_p0_9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_miso_p0_14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_mosi_p0_15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_sck_p0_16, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_spi1_ss0_p0_17, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40042000, __VA_ARGS__) fn(DT_N_S_soc_S_trng_4004d000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20004000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20008000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20010000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20020000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20021000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20022000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20024000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40028000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40046000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40047000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40047000_S_ad74416h_0, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_ipo, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__) fn(DT_N_S_buttons_S_pb1, __VA_ARGS__)

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_adi_max32670evkit 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v7m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv7m_systick 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_flash_controller 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_adi_max32_gcr 1
#define DT_COMPAT_HAS_OKAY_adi_max32_i2c 1
#define DT_COMPAT_HAS_OKAY_adi_max32_pinctrl 1
#define DT_COMPAT_HAS_OKAY_adi_max32_gpio 1
#define DT_COMPAT_HAS_OKAY_adi_max32_uart 1
#define DT_COMPAT_HAS_OKAY_adi_max32_trng 1
#define DT_COMPAT_HAS_OKAY_adi_max32_watchdog 1
#define DT_COMPAT_HAS_OKAY_adi_max32_dma 1
#define DT_COMPAT_HAS_OKAY_adi_max32_spi 1
#define DT_COMPAT_HAS_OKAY_adi_ad74416h 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m4f 1
#define DT_COMPAT_HAS_OKAY_fixed_clock 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_adi_max32670evkit_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v7m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv7m_systick_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 8
#define DT_N_INST_flash_controller_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_adi_max32_gcr_NUM_OKAY 1
#define DT_N_INST_adi_max32_i2c_NUM_OKAY 1
#define DT_N_INST_adi_max32_pinctrl_NUM_OKAY 1
#define DT_N_INST_adi_max32_gpio_NUM_OKAY 2
#define DT_N_INST_adi_max32_uart_NUM_OKAY 1
#define DT_N_INST_adi_max32_trng_NUM_OKAY 1
#define DT_N_INST_adi_max32_watchdog_NUM_OKAY 1
#define DT_N_INST_adi_max32_dma_NUM_OKAY 1
#define DT_N_INST_adi_max32_spi_NUM_OKAY 2
#define DT_N_INST_adi_ad74416h_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m4f_NUM_OKAY 1
#define DT_N_INST_fixed_clock_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_FOREACH_OKAY_adi_max32670evkit(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_adi_max32670evkit(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_adi_max32670evkit(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_adi_max32670evkit(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v7m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v7m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v7m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v7m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv7m_systick(fn) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_FOREACH_OKAY_VARGS_arm_armv7m_systick(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv7m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv7m_systick(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_memory_20004000) fn(DT_N_S_soc_S_memory_20008000) fn(DT_N_S_soc_S_memory_20010000) fn(DT_N_S_soc_S_memory_20020000) fn(DT_N_S_soc_S_memory_20021000) fn(DT_N_S_soc_S_memory_20022000) fn(DT_N_S_soc_S_memory_20024000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20004000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20008000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20010000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20020000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20021000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20022000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20024000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5) fn(6) fn(7)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__) fn(6, __VA_ARGS__) fn(7, __VA_ARGS__)
#define DT_FOREACH_OKAY_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_40029000)
#define DT_FOREACH_OKAY_VARGS_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_40029000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_40029000_S_flash_10000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_adi_max32_gcr(fn) fn(DT_N_S_soc_S_clock_controller_40000000)
#define DT_FOREACH_OKAY_VARGS_adi_max32_gcr(fn, ...) fn(DT_N_S_soc_S_clock_controller_40000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_adi_max32_gcr(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_adi_max32_gcr(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_adi_max32_i2c(fn) fn(DT_N_S_soc_S_i2c0_4001d000)
#define DT_FOREACH_OKAY_VARGS_adi_max32_i2c(fn, ...) fn(DT_N_S_soc_S_i2c0_4001d000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_adi_max32_i2c(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_adi_max32_i2c(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_adi_max32_pinctrl(fn) fn(DT_N_S_soc_S_pin_controller_40008000)
#define DT_FOREACH_OKAY_VARGS_adi_max32_pinctrl(fn, ...) fn(DT_N_S_soc_S_pin_controller_40008000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_adi_max32_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_adi_max32_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_adi_max32_gpio(fn) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000)
#define DT_FOREACH_OKAY_VARGS_adi_max32_gpio(fn, ...) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40008000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40008000_S_gpio_40009000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_adi_max32_gpio(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_adi_max32_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_adi_max32_uart(fn) fn(DT_N_S_soc_S_serial_40042000)
#define DT_FOREACH_OKAY_VARGS_adi_max32_uart(fn, ...) fn(DT_N_S_soc_S_serial_40042000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_adi_max32_uart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_adi_max32_uart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_adi_max32_trng(fn) fn(DT_N_S_soc_S_trng_4004d000)
#define DT_FOREACH_OKAY_VARGS_adi_max32_trng(fn, ...) fn(DT_N_S_soc_S_trng_4004d000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_adi_max32_trng(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_adi_max32_trng(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_adi_max32_watchdog(fn) fn(DT_N_S_soc_S_watchdog_40003000)
#define DT_FOREACH_OKAY_VARGS_adi_max32_watchdog(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_adi_max32_watchdog(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_adi_max32_watchdog(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_adi_max32_dma(fn) fn(DT_N_S_soc_S_dma_40028000)
#define DT_FOREACH_OKAY_VARGS_adi_max32_dma(fn, ...) fn(DT_N_S_soc_S_dma_40028000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_adi_max32_dma(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_adi_max32_dma(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_adi_max32_spi(fn) fn(DT_N_S_soc_S_spi_40046000) fn(DT_N_S_soc_S_spi_40047000)
#define DT_FOREACH_OKAY_VARGS_adi_max32_spi(fn, ...) fn(DT_N_S_soc_S_spi_40046000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40047000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_adi_max32_spi(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_adi_max32_spi(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_adi_ad74416h(fn) fn(DT_N_S_soc_S_spi_40047000_S_ad74416h_0)
#define DT_FOREACH_OKAY_VARGS_adi_ad74416h(fn, ...) fn(DT_N_S_soc_S_spi_40047000_S_ad74416h_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_adi_ad74416h(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_adi_ad74416h(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m4f(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m4f(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m4f(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m4f(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_clock(fn) fn(DT_N_S_clocks_S_clk_ipo)
#define DT_FOREACH_OKAY_VARGS_fixed_clock(fn, ...) fn(DT_N_S_clocks_S_clk_ipo, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_keys(fn) fn(DT_N_S_buttons)
#define DT_FOREACH_OKAY_VARGS_gpio_keys(fn, ...) fn(DT_N_S_buttons, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_keys(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_adi_ad74416h_BUS_spi 1
